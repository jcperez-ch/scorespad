{"version":3,"file":"static/js/r.584b30a4.chunk.js","mappings":"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","sources":["components/game/round/Guard.js","common/ButtonsWrapper.js","components/game/context/Scores.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","common/card/Header.js","common/StyledScore.js","components/game/round/actionCreators.js","components/game/round/form/ScoreRemove.js","components/game/round/Score.js","components/game/round/Sum.js","components/game/round/list/Field.js","components/game/round/list/Item.js","components/game/round/list/Wrapper.js","components/game/round/list/List.js","components/game/round/action/End.js","components/game/Scores.js","components/game/round/action/Delete.js","components/game/round/Championship.js","components/game/round/Top.js","components/Round.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport useGame from 'components/game/useGame';\n\nexport default ({ children, fallback = null }) => {\n  const { round } = useParams();\n  const { teams } = useGame();\n\n  return teams.some((team) => Object.keys(team.rounds).includes(round)) ? children : fallback;\n};\n","import styled from '@emotion/styled';\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.5rem 1rem;\n\n  > button {\n    flex: 1 1 100%;\n    margin: 0.25rem 0;\n  }\n`;\n\nexport default ButtonsWrapper;\n","import { createContext } from 'react';\n\nexport default createContext([]);\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import styled from '@emotion/styled';\nimport MuiCardHeader from '@mui/material/CardHeader';\n\nconst CardHeader = styled(MuiCardHeader)`\n  padding: 0.5rem;\n\n  span {\n    font-size: 11px;\n  }\n`;\n\nexport default CardHeader;\n","import styled from '@emotion/styled';\nimport Typography from '@mui/material/Typography';\n\nconst StyledScore = styled(Typography)`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nStyledScore.defaultProps = {\n  align: 'center',\n  component: 'div',\n};\n\nexport default StyledScore;\n","export const addScores = (key, round, scores) => ({\n  type: 'S++',\n  key,\n  round,\n  scores,\n});\n\nexport const removeScore = (key, round, index, scoreIndex) => ({\n  type: 'S-',\n  key,\n  round,\n  index,\n  scoreIndex,\n});\n","import React, { useContext, useState } from 'react';\nimport styled from '@emotion/styled';\nimport noop from 'utils/fn/noop';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\n\nimport ModalConfirm from 'common/modal/Confirm';\nimport GameStoreContext from 'components/game/context/Store';\nimport { removeScore } from '../actionCreators';\n\nconst StyledListItemText = styled(ListItemText)`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  gap: 5px;\n`;\n\nexport default function RoundFormScoreRemove({ score, index, scoreIndex, onSuccess = noop, onClose = noop }) {\n  const { gameKey, round } = useParams();\n  const [, dispatch] = useContext(GameStoreContext);\n  const [t] = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClose = () => setIsOpen(false);\n  const handleRemove = () => {\n    dispatch(removeScore(gameKey, round, index, scoreIndex));\n    onSuccess();\n    handleClose();\n  };\n  return (\n    <StyledListItemText component=\"div\" disableTypography>\n      <IconButton\n        color=\"primary\"\n        aria-label={t('title.removeScore')}\n        aria-owns={isOpen ? 'confirm-dialog' : undefined}\n        aria-haspopup=\"true\"\n        onClick={() => setIsOpen(true)}\n        size=\"large\"\n      >\n        <Icon>delete_outline</Icon>\n      </IconButton>\n      <ModalConfirm\n        cancelText={t('button.cancel')}\n        confirmText={t('button.remove')}\n        open={isOpen}\n        title={t('title.removeScore')}\n        subtitle={t('messages.confirmRemoveScore')}\n        onConfirm={handleRemove}\n        onClose={handleClose}\n      />\n      <Typography align=\"center\" variant=\"body2\">\n        {score}\n      </Typography>\n      <IconButton color=\"primary\" size=\"small\" aria-label={t('button.cancel')} onClick={onClose}>\n        <Icon>check</Icon>\n      </IconButton>\n    </StyledListItemText>\n  );\n}\n","import React, { useState } from 'react';\nimport ListItem from '@mui/material/ListItem';\n\nimport SlideLongRippleSwitch from 'common/SlideLongRippleSwitch';\nimport StyledScore from 'common/StyledScore';\nimport useLongRipple from 'common/useLongRipple';\nimport RoundScoreRemove from './form/ScoreRemove';\n\nexport default function RoundScore({ index, score, scoreIndex }) {\n  const [canClose, setCanClose] = useState(false);\n  const handleEditMode = () => setCanClose(true);\n  const handleViewMode = () => setCanClose(false);\n  const rippleProps = useLongRipple({ onLongPress: handleEditMode });\n\n  return (\n    <SlideLongRippleSwitch active={canClose ? 0 : 1}>\n      <RoundScoreRemove onClose={handleViewMode} onSuccess={handleViewMode} scoreIndex={scoreIndex} score={score} index={index} />\n      <ListItem button dense {...rippleProps}>\n        <StyledScore variant=\"body2\">{score}</StyledScore>\n      </ListItem>\n    </SlideLongRippleSwitch>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport ListItem from '@mui/material/ListItem';\nimport StyledScore from 'common/StyledScore';\nimport { themeColors } from 'themes';\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 1px solid ${themeColors.border};\n`;\n\nexport default function RoundSum({ rounds = [], round }) {\n  return (\n    <StyledListItem component=\"div\">\n      <StyledScore variant=\"overline\">{rounds[round].reduce((sum, value) => value + sum, 0)}</StyledScore>\n    </StyledListItem>\n  );\n}\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\n\nconst RoundListField = styled(TextField)`\n  width: 100px;\n\n  input {\n    text-align: center;\n  }\n`;\n\nRoundListField.defaultProps = {\n  margin: 'dense',\n  variant: 'outlined',\n  type: 'text',\n};\n\nexport default RoundListField;\n","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\nimport Card from '@mui/material/Card';\nimport List from '@mui/material/List';\n\nimport CardHeader from 'common/card/Header';\nimport GameScoresContext from 'components/game/context/Scores';\nimport GameRoundScore from 'components/game/round/Score';\nimport GameRoundSum from 'components/game/round/Sum';\nimport { onEnter } from 'utils/handlers';\nimport RoundListField from './Field';\n\nconst StyledRoundListItemContent = styled.div`\n  padding: 16px;\n  text-align: center;\n`;\n\nexport default function RoundListItem({ index, name, rounds, round, onEnter: handleEnter }) {\n  const teamScores = rounds[round];\n  const [roundScores, setRoundScores] = useContext(GameScoresContext);\n  const teamScoreValue = roundScores[index];\n  const handleChange = ({ target }) => {\n    setRoundScores(roundScores.map((score, i) => (i === index ? target.value : score)));\n  };\n  const handleOnlyNumbers = (event) => {\n    if (event.key.length > 1 || /[0-9]|-|\\.|,/.test(event.key)) {\n      return true;\n    }\n    event.preventDefault();\n    return false;\n  };\n  return (\n    <li>\n      <Card>\n        <CardHeader title={name} titleTypographyProps={{ align: 'center' }} />\n        <StyledRoundListItemContent>\n          <List component=\"div\" dense>\n            {teamScores.map((score, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <GameRoundScore key={key} score={score} index={index} scoreIndex={key} />\n            ))}\n            <GameRoundSum rounds={rounds} round={round} />\n          </List>\n          <RoundListField\n            inputProps={{\n              tabIndex: index + 1,\n              pattern: '-?\\\\d*',\n            }}\n            onChange={handleChange}\n            onKeyDown={onEnter(handleEnter, handleOnlyNumbers)}\n            value={teamScoreValue}\n          />\n        </StyledRoundListItemContent>\n      </Card>\n    </li>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport default styled.ul`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n  padding: 1rem;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport WarnPlaceholder from 'common/WarnPlaceholder';\nimport noop from 'utils/fn/noop';\n\nimport RoundListItem from './Item';\nimport RoundListWrapper from './Wrapper';\n\nexport default function RoundList({ teams = [], round, onSubmit = noop }) {\n  const [t] = useTranslation();\n  return teams.length === 0 ? (\n    <WarnPlaceholder icon=\"people\" message={t('text.noTeams')} />\n  ) : (\n    <RoundListWrapper>\n      {teams.map((team, key) => (\n        <RoundListItem key={team.name} index={key} round={round} onEnter={onSubmit} {...team} />\n      ))}\n    </RoundListWrapper>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport noop from 'utils/fn/noop';\nimport { useTranslation } from 'react-i18next';\nimport Button from '@mui/material/Button';\n\nimport ButtonsWrapper from 'common/ButtonsWrapper';\nimport ModalConfirm from 'common/modal/Confirm';\nimport GameStoreContext from 'components/game/context/Store';\nimport { endRound } from 'components/game/actionCreators';\n\nexport default function RoundActionEnd({ gameKey, round, onEnd = noop }) {\n  const [open, setOpen] = useState(false);\n  const [t] = useTranslation();\n  const [, dispatch] = useContext(GameStoreContext);\n  const handleClose = () => setOpen(false);\n\n  const handleSubmit = () => {\n    dispatch(endRound(gameKey, round));\n    setOpen(false);\n    onEnd(round);\n  };\n\n  return (\n    <>\n      <ButtonsWrapper>\n        <Button color=\"primary\" variant=\"contained\" aria-owns={open ? 'confirm-end-dialog' : undefined} aria-haspopup=\"true\" onClick={() => setOpen(true)}>\n          {t('button.endGame')}\n        </Button>\n      </ButtonsWrapper>\n      <ModalConfirm\n        open={open}\n        cancelText={t('button.cancel')}\n        confirmText={t('button.endGame')}\n        onClose={handleClose}\n        title={t('button.endGame')}\n        subtitle={t('messages.confirmEndGame')}\n        onConfirm={handleSubmit}\n      />\n    </>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport ButtonsWrapper from 'common/ButtonsWrapper';\n\nimport GameStoreContext from './context/Store';\nimport GameScoresContext from './context/Scores';\nimport RoundList from './round/list/List';\nimport RoundEnd from './round/action/End';\nimport { addScores } from './round/actionCreators';\nimport useGame from './useGame';\n\nexport default function GameScores({ round, onEnd }) {\n  const { gameKey } = useParams();\n  const { teams = [] } = useGame();\n  const [, dispatch] = useContext(GameStoreContext);\n  const initialState = Array.from({ length: teams.length }, () => '');\n  const state = useState(initialState);\n  const [t] = useTranslation();\n\n  const handleSubmit = () => {\n    const [scores, setScores] = state;\n    if (scores.some((score) => typeof Number(score) === 'number')) {\n      dispatch(\n        addScores(\n          gameKey,\n          round,\n          scores.map((score) => Number.parseInt(score, 10)),\n        ),\n      );\n      setScores(initialState);\n    }\n  };\n  return (\n    <GameScoresContext.Provider value={state}>\n      <RoundList teams={teams} round={round} onSubmit={handleSubmit} />\n      <ButtonsWrapper>\n        <Button icon=\"plus\" color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n          {t('button.sum')}\n        </Button>\n      </ButtonsWrapper>\n      <RoundEnd gameKey={gameKey} round={round} onEnd={onEnd} />\n    </GameScoresContext.Provider>\n  );\n}\n","import noop from 'utils/fn/noop';\nimport React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport Button from '@mui/material/Button';\nimport Icon from '@mui/material/Icon';\n\nimport ModalConfirm from 'common/modal/Confirm';\nimport GameStoreContext from 'components/game/context/Store';\nimport { deleteChampionship } from 'components/game/team/actionCreators';\n\nexport default function RoundActionDelete({ round, onSuccess = noop }) {\n  const [, dispatch] = useContext(GameStoreContext);\n  const { gameKey } = useParams();\n  const [t] = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleCancel = () => setIsOpen(false);\n\n  const handleDelete = () => {\n    onSuccess();\n    dispatch(deleteChampionship(gameKey, round));\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" variant=\"contained\" startIcon={<Icon>delete_outline</Icon>} onClick={() => setIsOpen(true)}>\n        {t('button.remove')}\n      </Button>\n      <ModalConfirm\n        cancelText={t('button.cancel')}\n        confirmText={t('button.remove')}\n        open={isOpen}\n        title={t('title.removeRound')}\n        subtitle={t('messages.confirmRemoveRound')}\n        onClose={handleCancel}\n        onConfirm={handleDelete}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\n\nimport ButtonsWrapper from 'common/ButtonsWrapper';\nimport Flex from 'common/Flex';\nimport noop from 'utils/fn/noop';\n\nimport RoundActionDelete from './action/Delete';\n\nconst StyledSumScore = styled(Typography)`\n  && {\n    font-size: 2rem;\n    text-align: right;\n    line-height: 1.2;\n  }\n`;\nStyledSumScore.defaultProps = {\n  variant: 'overline',\n};\n\nconst StyledScore = styled(Typography)`\n  && {\n    font-size: 0.875rem;\n    margin-left: 0.875rem;\n  }\n`;\nStyledScore.defaultProps = {\n  variant: 'overline',\n};\n\nexport default function RoundChampionship({ teams, round, onDelete = noop }) {\n  const teamTotal = ({ rounds }) => rounds[round].reduce((sum, value) => value + sum, 0);\n  const sortedTeams = [...teams].sort((team1, team2) => teamTotal(team2) - teamTotal(team1));\n  return (\n    <>\n      <List component=\"div\">\n        {sortedTeams.map((team) => (\n          <ListItem key={`${team.name}${round}`}>\n            <ListItemText disableTypography>\n              <Flex display items=\"center\" justify=\"space-between\">\n                <Typography variant=\"body1\">{team.name}</Typography>\n                <StyledSumScore>{teamTotal(team)}</StyledSumScore>\n              </Flex>\n              <Flex component=\"ul\" display items=\"center\" justify=\"flex-end\">\n                {team.rounds[round].map((score, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <li key={index}>\n                    <StyledScore>{score}</StyledScore>\n                  </li>\n                ))}\n              </Flex>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n      <ButtonsWrapper>\n        <RoundActionDelete round={round} onSuccess={onDelete} />\n      </ButtonsWrapper>\n    </>\n  );\n}\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\n\nimport BarToolbar from 'common/bar/Toolbar';\nimport BarTitle from 'common/bar/Title';\nimport LocaleMenu from 'components/locale/Menu';\nimport ThemeMenu from 'components/theme/Menu';\n\nexport default function RoundTop() {\n  const navigate = useNavigate();\n  const goToGame = () => navigate(-1);\n\n  return (\n    <BarToolbar>\n      <IconButton color=\"inherit\" onClick={goToGame} size=\"large\">\n        <Icon>arrow_back</Icon>\n      </IconButton>\n      <BarTitle pl=\"0.5rem\" />\n      <LocaleMenu />\n      <ThemeMenu />\n    </BarToolbar>\n  );\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport WarnPlaceholder from 'common/WarnPlaceholder';\nimport GameGuard from './game/Guard';\nimport RoundGuard from './game/round/Guard';\n\nimport useGame from './game/useGame';\nimport Scores from './game/Scores';\nimport Championship from './game/round/Championship';\nimport RoundTop from './game/round/Top';\nimport PageViewTracker from './PageViewTracker';\n\nexport default function Round() {\n  const { gameKey, round } = useParams();\n  const game = useGame();\n  const [t] = useTranslation();\n  const navigate = useNavigate();\n\n  const goToGame = () => navigate(`/games/${gameKey}`);\n  const isActive = game && game.round === round;\n  return (\n    <>\n      <RoundTop />\n      <GameGuard>\n        <RoundGuard fallback={<WarnPlaceholder icon=\"warning\" message={t('text.roundNotFound')} />}>\n          {isActive ? <Scores round={round} onEnd={goToGame} /> : <Championship teams={game ? game.teams : []} round={round} onDelete={goToGame} />}\n        </RoundGuard>\n      </GameGuard>\n      <PageViewTracker />\n    </>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;"],"names":["_ref","children","fallback","round","useParams","teams","useGame","some","team","Object","keys","rounds","includes","styled","createContext","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","MuiCardHeader","StyledScore","Typography","defaultProps","align","component","addScores","key","scores","type","removeScore","index","scoreIndex","StyledListItemText","ListItemText","RoundFormScoreRemove","score","onSuccess","noop","onClose","gameKey","dispatch","useContext","GameStoreContext","t","useTranslation","isOpen","setIsOpen","useState","handleClose","_jsxs","disableTypography","IconButton","color","onClick","size","Icon","ModalConfirm","cancelText","confirmText","open","title","subtitle","onConfirm","handleRemove","variant","RoundScore","canClose","setCanClose","handleViewMode","rippleProps","useLongRipple","onLongPress","handleEditMode","SlideLongRippleSwitch","active","RoundScoreRemove","ListItem","button","dense","StyledListItem","themeColors","RoundSum","reduce","sum","value","RoundListField","TextField","margin","StyledRoundListItemContent","RoundListItem","onEnter","handleEnter","teamScores","roundScores","setRoundScores","GameScoresContext","teamScoreValue","Card","CardHeader","titleTypographyProps","List","map","GameRoundScore","GameRoundSum","inputProps","tabIndex","pattern","onChange","_ref2","target","i","onKeyDown","event","length","test","preventDefault","RoundList","onSubmit","WarnPlaceholder","icon","message","RoundListWrapper","RoundActionEnd","onEnd","setOpen","_Fragment","ButtonsWrapper","Button","handleSubmit","endRound","GameScores","initialState","Array","from","state","setScores","Number","parseInt","RoundEnd","RoundActionDelete","startIcon","handleCancel","handleDelete","deleteChampionship","StyledSumScore","RoundChampionship","onDelete","teamTotal","sortedTeams","sort","team1","team2","Flex","display","items","justify","RoundTop","navigate","useNavigate","BarToolbar","goToGame","BarTitle","pl","LocaleMenu","ThemeMenu","Round","game","isActive","GameGuard","RoundGuard","Scores","Championship","PageViewTracker","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","subheader","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","subheaderProp","subheaderTypographyProps","titleProp","as"],"sourceRoot":""}