{"version":3,"sources":["common/dialog/Title.js","common/SlideUp.js","common/dialog/Headline.js","components/game/team/form/Create.js"],"names":["StyledWrapper","styled","h4","themeColors","border","StyledContainer","div","StyledText","Typography","attrs","component","variant","forwardRef","ref","children","onClose","props","color","onClick","direction","DialogHeadline","gutterBottom","TeamFormCreate","open","setOpen","useState","name","setName","t","useTranslation","navigate","useNavigate","dispatch","useContext","GameStoreContext","gameKey","useParams","round","useGame","handleClose","error","onSubmit","useValidation","errorMessage","createTeam","useEffect","fullScreen","id","aria-labelledby","TransitionComponent","SlideUp","label","onChange","onEnter","value","autoFocus"],"mappings":"kiBAQA,MAAMA,EAAgBC,IAAOC,GAAV,IACUC,IAAYC,QAGnCC,EAAkBJ,IAAOK,IAAV,KAMfC,EAAaN,YAAOO,KAAYC,MAAM,CAC1CC,UAAW,KACXC,QAAS,YAFQV,CAAH,KAoBDW,yBAXK,CAAC,EAAiCC,KAAlC,IAAC,SAAEC,EAAF,QAAYC,GAAb,EAAyBC,EAAzB,6CAClB,kBAAChB,EAAD,eAAea,IAAKA,GAASG,GAC3B,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAYY,MAAM,UAAUC,QAASH,GACnC,kBAAC,IAAD,eAEF,kBAACR,EAAD,KAAaO,Q,iCCjCnB,6BAKeF,yBAFC,CAACI,EAAOH,IAAQ,kBAAC,IAAD,eAAOA,IAAKA,EAAKM,UAAU,MAASH,M,iKCApE,MAAMI,EAAiBnB,YAAOO,KAAYC,MAAM,CAC9CE,QAAS,QACTU,cAAc,GAFOpB,CAAH,KAOLmB,O,iCCVf,gJA8DeE,UA5CQ,KACrB,MAAOC,EAAMC,GAAWC,oBAAS,IAC1BC,EAAMC,GAAWF,mBAAS,KAC1BG,GAAKC,cACNC,EAAWC,eACV,CAAEC,GAAYC,qBAAWC,MAC1B,QAAEC,GAAYC,eACd,MAAEC,GAAUC,cAEZC,EAAc,IAAMT,GAAU,IAC9B,MAAEU,EAAF,SAASC,GAAaC,YAAc,CACxChB,OACAiB,aAAc,0BACdF,SAAU,KACRT,EAASY,YAAWT,EAASE,EAAOX,IACpCa,OAUJ,OANAM,oBAAU,KACHtB,GACHC,GAAQ,IAET,CAACD,IAGF,kBAAC,IAAD,CAAQuB,YAAU,EAACC,GAAG,kBAAkBhC,QAASwB,EAAaS,kBAAgB,wBAAwBzB,KAAMA,EAAM0B,oBAAqBC,KACrI,kBAAC,IAAD,CAAaH,GAAG,wBAAwBhC,QAASwB,GAC9CX,EAAE,mBAEL,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAiBA,EAAE,oBACnB,kBAAC,IAAD,CAAWuB,MAAOvB,EAAE,wBAAyBwB,SAAUzB,EAAS0B,QAASZ,EAAUD,MAAOA,EAAOc,MAAO5B,KAE1G,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQR,QAASqB,GAAcX,EAAE,kBACjC,kBAAC,IAAD,CAAQjB,QAAQ,YAAYM,MAAM,UAAUsC,WAAS,EAACrC,QAASuB,GAC5Db,EAAE","file":"static/js/tc.9a591159.chunk.js","sourcesContent":["import React, { forwardRef } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nimport { themeColors } from 'themes'\n\nconst StyledWrapper = styled.h4`\n  border-bottom: 1px solid ${themeColors.border};\n`\n\nconst StyledContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: flex-start;\n`\n\nconst StyledText = styled(Typography).attrs({\n  component: 'h4',\n  variant: 'overline',\n})`\n  && {\n    margin-left: 0.75rem;\n  }\n`\n\nconst DialogTitle = ({ children, onClose, ...props }, ref) => (\n  <StyledWrapper ref={ref} {...props}>\n    <StyledContainer>\n      <IconButton color=\"primary\" onClick={onClose}>\n        <Icon>close</Icon>\n      </IconButton>\n      <StyledText>{children}</StyledText>\n    </StyledContainer>\n  </StyledWrapper>\n)\n\nexport default forwardRef(DialogTitle)\n","import React, { forwardRef } from 'react'\nimport Slide from '@material-ui/core/Slide'\n\nconst SlideUp = (props, ref) => <Slide ref={ref} direction=\"up\" {...props} />\n\nexport default forwardRef(SlideUp)\n","import styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\nconst DialogHeadline = styled(Typography).attrs({\n  variant: 'body2',\n  gutterBottom: true,\n})`\n  padding: 1rem 0 0.5rem;\n`\n\nexport default DialogHeadline\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nimport SlideUp from 'common/SlideUp'\nimport DialogTitle from 'common/dialog/Title'\nimport DialogHeadline from 'common/dialog/Headline'\nimport NameField from 'common/NameField'\nimport GameStoreContext from 'components/game/context/Store'\nimport useValidation from 'utils/validation'\n\nimport { createTeam } from '../actionCreators'\nimport useGame from '../../useGame'\n\nconst TeamFormCreate = () => {\n  const [open, setOpen] = useState(false)\n  const [name, setName] = useState('')\n  const [t] = useTranslation()\n  const navigate = useNavigate()\n  const [, dispatch] = useContext(GameStoreContext)\n  const { gameKey } = useParams()\n  const { round } = useGame()\n\n  const handleClose = () => navigate(-1)\n  const { error, onSubmit } = useValidation({\n    name,\n    errorMessage: 'errors.requiredTeamName',\n    onSubmit: () => {\n      dispatch(createTeam(gameKey, round, name))\n      handleClose()\n    },\n  })\n\n  useEffect(() => {\n    if (!open) {\n      setOpen(true)\n    }\n  }, [open])\n\n  return (\n    <Dialog fullScreen id=\"team-add-dialog\" onClose={handleClose} aria-labelledby=\"team-add-dialog-title\" open={open} TransitionComponent={SlideUp}>\n      <DialogTitle id=\"team-add-dialog-title\" onClose={handleClose}>\n        {t('button.addTeam')}\n      </DialogTitle>\n      <DialogContent>\n        <DialogHeadline>{t('text.addNewTeam')}</DialogHeadline>\n        <NameField label={t('placeholder.teamName')} onChange={setName} onEnter={onSubmit} error={error} value={name} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>{t('button.cancel')}</Button>\n        <Button variant=\"contained\" color=\"primary\" autoFocus onClick={onSubmit}>\n          {t('button.addTeam')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default TeamFormCreate\n"],"sourceRoot":""}