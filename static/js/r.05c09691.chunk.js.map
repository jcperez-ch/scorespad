{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","components/game/round/Guard.js","common/ButtonsWrapper.js","components/game/context/Scores.js","../node_modules/@material-ui/core/esm/Card/Card.js","common/card/Header.js","common/StyledScore.js","components/game/round/form/ScoreRemove.js","components/game/round/actionCreators.js","components/game/round/Score.js","components/game/round/Sum.js","components/game/round/list/Field.js","components/game/round/list/Item.js","components/game/round/list/Wrapper.js","components/game/round/list/List.js","components/game/round/action/End.js","components/game/Scores.js","components/game/round/action/Delete.js","components/game/round/Championship.js","components/game/round/Top.js","components/Round.js"],"names":["CardHeader","React","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","_objectWithoutProperties","type","Typography","_extends","variant","display","color","clsx","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","children","fallback","round","useParams","teams","useGame","some","team","Object","keys","rounds","includes","ButtonsWrapper","styled","div","createContext","Card","_props$raised","raised","Paper","elevation","overflow","MuiCardHeader","StyledScore","attrs","align","StyledListItemText","ListItemText","score","index","scoreIndex","onSuccess","noop","onClose","gameKey","dispatch","useContext","GameStoreContext","t","useTranslation","cancelText","confirmText","subtitle","size","onConfirm","key","removeScore","IconButton","aria-label","onClick","Icon","canClose","setCanClose","useState","handleViewMode","rippleProps","useLongRipple","onLongPress","SlideLongRippleSwitch","active","ListItem","button","dense","StyledListItem","themeColors","border","reduce","sum","value","TextField","margin","StyledRoundListItemContent","onEnter","handleEnter","teamScores","roundScores","setRoundScores","GameScoresContext","teamScoreValue","List","map","inputProps","tabIndex","pattern","onChange","target","i","onKeyDown","event","length","test","preventDefault","ul","onSubmit","isEmpty","onEnd","open","setOpen","toggleOpen","Button","aria-owns","undefined","aria-haspopup","Modal","id","aria-labelledby","aria-describedby","autoFocus","endRound","initialState","Array","from","state","handleSubmit","scores","setScores","Number","addScores","parseInt","Provider","icon","fab","deleteChampionship","StyledSumScore","onDelete","sortedTeams","sortBy","Flex","items","justify","navigate","useNavigate","pl","game","goToGame","isActive","WarnPlaceholder","message","Championship","PageViewTracker"],"mappings":"wGAAA,sDAwCIA,EAA0BC,cAAiB,SAAoBC,EAAOC,GACxE,IAAIC,EAASF,EAAME,OACfC,EAASH,EAAMG,OACfC,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAmBN,EAAMO,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAwBT,EAAMU,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAgBX,EAAMY,UACtBC,EAA2Bb,EAAMa,yBACjCC,EAAYd,EAAMe,MAClBC,EAAuBhB,EAAMgB,qBAC7BC,EAAQC,YAAyBlB,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,YAAa,oBAAqB,YAAa,2BAA4B,QAAS,yBAEzKe,EAAQD,EAEC,MAATC,GAAiBA,EAAMI,OAASC,KAAeV,IACjDK,EAAqBhB,gBAAoBqB,IAAYC,YAAS,CAC5DC,QAASnB,EAAS,QAAU,KAC5BE,UAAWD,EAAQW,MACnBR,UAAW,OACXgB,QAAS,SACRP,GAAuBD,IAG5B,IAAIH,EAAYD,EAYhB,OAViB,MAAbC,GAAqBA,EAAUO,OAASC,KAAeV,IACzDE,EAAyBb,gBAAoBqB,IAAYC,YAAS,CAChEC,QAASnB,EAAS,QAAU,QAC5BE,UAAWD,EAAQQ,UACnBY,MAAO,gBACPjB,UAAW,OACXgB,QAAS,SACRV,GAA2BD,IAGZb,gBAAoBS,EAAWa,YAAS,CAC1DhB,UAAWoB,YAAKrB,EAAQsB,KAAMrB,GAC9BJ,IAAKA,GACJgB,GAAQd,GAAuBJ,gBAAoB,MAAO,CAC3DM,UAAWD,EAAQD,QAClBA,GAAsBJ,gBAAoB,MAAO,CAClDM,UAAWD,EAAQuB,SAClBZ,EAAOH,GAAYV,GAAuBH,gBAAoB,MAAO,CACtEM,UAAWD,EAAQF,QAClBA,OAwEU0B,gBAxJK,CAElBF,KAAM,CACJH,QAAS,OACTM,WAAY,SACZC,QAAS,IAIX3B,OAAQ,CACN4B,KAAM,WACNC,YAAa,IAIf9B,OAAQ,CACN6B,KAAM,WACNE,UAAW,aACXC,WAAY,EACZF,aAAc,GAIhBL,QAAS,CACPI,KAAM,YAIRhB,MAAO,GAGPH,UAAW,IAyHqB,CAChCuB,KAAM,iBADOP,CAEZ9B,I,oGC9JY,IAAGsC,WAAUC,WAAW,SACrC,MAAM,MAAEC,GAAUC,eACZ,MAAEC,GAAUC,cAElB,OAAOD,EAAME,KAAMC,GAASC,OAAOC,KAAKF,EAAKG,QAAQC,SAAST,IAAUF,EAAWC,G,kOCMtEW,MAXQC,IAAOC,IAAV,K,QCALC,0BAAc,I,4DCWzBC,EAAoBrD,cAAiB,SAAcC,EAAOC,GAC5D,IAAIG,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBgD,EAAgBrD,EAAMsD,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CpC,EAAQC,YAAyBlB,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBwD,IAAOlC,YAAS,CACtDhB,UAAWoB,YAAKrB,EAAQsB,KAAMrB,GAC9BmD,UAAWF,EAAS,EAAI,EACxBrD,IAAKA,GACJgB,OA6BUW,cA9CK,CAElBF,KAAM,CACJ+B,SAAU,WA2CoB,CAChCtB,KAAM,WADOP,CAEZwB,G,sJC5CYtD,MARImD,YAAOS,IAAPT,CAAH,K,gKCSDU,MATKV,YAAO7B,KAAYwC,MAAM,CAC3CC,MAAO,SACPtD,UAAW,OAFO0C,CAAH,K,+OCWjB,MAAMa,EAAqBb,YAAOc,IAAPd,CAAH,KAST,QAAGe,QAAOC,QAAOC,aAAYC,YAAYC,OAAMC,UAAUD,WACtE,MAAM,QAAEE,EAAF,MAAWhC,GAAUC,eACpB,CAAEgC,GAAYC,qBAAWC,MACzBC,GAAKC,cAKZ,OACE,kBAACb,EAAD,CAAoBvD,UAAU,MAAMG,mBAAiB,GACnD,kBAAC,IAAD,CACEc,MAAM,UACNoD,WAAYF,EAAE,iBACdG,YAAaH,EAAE,iBACf3D,MAAO2D,EAAE,qBACTI,SAAUJ,EAAE,+BACZK,KAAK,QACLC,UAbe,KACnBT,ECrBuB,EAACU,EAAK3C,EAAO2B,EAAOC,KAApB,CACzB/C,KAAM,KACN8D,MACA3C,QACA2B,QACAC,eDgBWgB,CAAYZ,EAAShC,EAAO2B,EAAOC,IAC5CC,OAaE,kBAAC/C,EAAA,EAAD,CAAYyC,MAAM,SAASvC,QAAQ,SAChC0C,GAEH,kBAACmB,EAAA,EAAD,CAAY3D,MAAM,UAAUuD,KAAK,QAAQK,aAAYV,EAAE,iBAAkBW,QAAShB,GAChF,kBAACiB,EAAA,EAAD,iBEtCO,IAAGrB,QAAOD,QAAOE,iBAC9B,MAAOqB,EAAUC,GAAeC,oBAAS,GAEnCC,EAAiB,IAAMF,GAAY,GACnCG,EAAcC,YAAc,CAAEC,YAFb,IAAML,GAAY,KAIzC,OACE,kBAACM,EAAA,EAAD,CAAuBC,OAAQR,EAAW,EAAI,GAC5C,kBAAC,EAAD,CAAkBlB,QAASqB,EAAgBvB,UAAWuB,EAAgBxB,WAAYA,EAAYF,MAAOA,EAAOC,MAAOA,IACnH,kBAAC+B,EAAA,EAAD,eAAUC,QAAM,EAACC,OAAK,GAAKP,GACzB,kBAAC,EAAD,CAAarE,QAAQ,SAAS0C,M,+GCZtC,MAAMmC,EAAiBlD,YAAO+C,IAAP/C,CAAH,IACMmD,IAAYC,QAGvB,QAAGvD,SAAS,GAAIR,WAC7B,kBAAC6D,EAAD,CAAgB5F,UAAU,OACxB,kBAAC,EAAD,CAAae,QAAQ,YAAYwB,EAAOR,GAAOgE,OAAO,CAACC,EAAKC,IAAUA,EAAQD,EAAK,K,sJCTxEtD,kBAAOwD,KAAW7C,MAAM,CACrC8C,OAAQ,QACRpF,QAAS,WACTH,KAAM,QAHO8B,CAAf,K,kHCUA,MAAM0D,GAA6B1D,IAAOC,IAAV,KAKjB,SAAGe,QAAO9B,OAAMW,SAAQR,QAAOsE,QAASC,MACrD,MAAMC,EAAahE,EAAOR,IACnByE,EAAaC,GAAkBxC,qBAAWyC,GAC3CC,EAAiBH,EAAY9C,GAWnC,OACE,4BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAYlD,MAAOoB,EAAMnB,qBAAsB,CAAE6C,MAAO,YACxD,kBAAC8C,GAAD,KACE,kBAACQ,EAAA,EAAD,CAAM5G,UAAU,MAAM2F,OAAK,GACxBkB,cAAIN,EAAY,CAAC9C,EAAOiB,IACvB,kBAAC,EAAD,CAAgBA,IAAKA,EAAKjB,MAAOA,EAAOC,MAAOA,EAAOC,WAAYe,KAEpE,kBAAC,EAAD,CAAcnC,OAAQA,EAAQR,MAAOA,KAEvC,kBAAC,EAAD,CACE+E,WAAY,CACVC,SAAUrD,EAAQ,EAClBsD,QAAS,UAEXC,SA1BW,EAAGC,aACtBT,EAAeD,EAAYK,IAAI,CAACpD,EAAO0D,IAAOA,IAAMzD,EAAQwD,EAAOjB,MAAQxC,KA0BnE2D,UAAWf,YAAQC,EAxBFe,MACrBA,EAAM3C,IAAI4C,OAAS,GAAK,eAAeC,KAAKF,EAAM3C,QAGtD2C,EAAMG,kBACC,IAoBCvB,MAAOU,Q,8LChDJjE,WAAO+E,GAAtB,MCKe,KAAGxF,QAAQ,GAAIF,QAAO2F,WAAW7D,UAC9C8D,kBAAQ1F,GACN,kBAAC,IAAD,MAEA,kBAAC,GAAD,KACGA,EAAM4E,IAAI,CAACzE,EAAMsC,IAChB,kBAAC,GAAD,eAAeA,IAAKtC,EAAKR,KAAM8B,MAAOgB,EAAK3C,MAAOA,EAAOsE,QAASqB,GAActF,M,uCCAzE,KAAG2B,UAAShC,QAAO6F,QAAQ/D,WACxC,MAAOgE,EAAMC,GAAW5C,oBAAS,IAC1Bf,GAAKC,eACL,CAAEJ,GAAYC,qBAAWC,KAC1B6D,EAAa,IAAMD,GAASD,GAQlC,OACE,oCACE,kBAAC,EAAD,KACE,kBAACG,EAAA,EAAD,CAAQ/G,MAAM,UAAUF,QAAQ,YAAYkH,YAAWJ,EAAO,0BAAuBK,EAAWC,gBAAc,OAAOrD,QAASiD,GAC3H5D,EAAE,oBAGP,kBAACiE,GAAA,EAAD,CAAOC,GAAG,qBAAqBC,kBAAgB,oBAAoBC,mBAAiB,0BAA0BV,KAAMA,EAAM/D,QAASiE,GACjI,kBAAC,KAAD,KACE,kBAAClH,EAAA,EAAD,CAAYE,QAAQ,KAAKsH,GAAG,qBACzBlE,EAAE,mBAEL,kBAACtD,EAAA,EAAD,CAAYE,QAAQ,YAAYsH,GAAG,2BAChClE,EAAE,4BAEL,kBAAC,KAAD,KACE,kBAAC6D,EAAA,EAAD,CAAQlD,QAASiD,GAAa5D,EAAE,kBAChC,kBAAC6D,EAAA,EAAD,CAAQ/G,MAAM,UAAUuH,WAAS,EAAC1D,QAvBvB,KACnBd,EAASyE,aAAS1E,EAAShC,IAC3B+F,GAAQ,GACRF,EAAM7F,KAqBKoC,EAAE,wBC9BF,KAAGpC,QAAO6F,YACvB,MAAM,QAAE7D,GAAY/B,eACd,MAAEC,EAAQ,IAAOC,eAChB,CAAE8B,GAAYC,qBAAWC,KAC1BwE,EAAeC,MAAMC,KAAK,CAAEtB,OAAQrF,EAAMqF,QAAU,IAAM,IAC1DuB,EAAQ3D,mBAASwD,IAChBvE,GAAKC,cAEN0E,EAAe,KACnB,MAAOC,EAAQC,GAAaH,EACxBE,EAAO5G,KAAMsB,GAAmC,kBAAlBwF,OAAOxF,MACvCO,ERxBmB,EAACU,EAAK3C,EAAOgH,KAAb,CACvBnI,KAAM,MACN8D,MACA3C,QACAgH,WQqBMG,CACEnF,EACAhC,EACAgH,EAAOlC,IAAKpD,GAAUwF,OAAOE,SAAS1F,EAAO,OAGjDuF,EAAUN,KAGd,OACE,kBAAC,EAAkBU,SAAnB,CAA4BnD,MAAO4C,GACjC,kBAAC,GAAD,CAAW5G,MAAOA,EAAOF,MAAOA,EAAO2F,SAAUoB,IACjD,kBAAC,EAAD,KACE,kBAACd,EAAA,EAAD,CAAQqB,KAAK,OAAOpI,MAAM,UAAUF,QAAQ,YAAY+D,QAASgE,GAC9D3E,EAAE,gBAGP,kBAAC,GAAD,CAAUJ,QAASA,EAAShC,MAAOA,EAAO6F,MAAOA,M,kBCjCxC,KAAG7F,QAAO6B,YAAYC,WACnC,MAAO,CAAEG,GAAYC,qBAAWC,MAC1B,QAAEH,GAAY/B,eACbmC,GAAKC,cAOZ,OACE,kBAAC,IAAD,CACEC,WAAYF,EAAE,iBACdG,YAAaH,EAAE,iBACf3D,MAAO2D,EAAE,oBACTI,SAAUJ,EAAE,+BACZlD,MAAM,UACNqI,KAAG,EACH9E,KAAK,QACLzD,QAAQ,YACR0D,UAfiB,KACnBb,IACAI,EAASuF,aAAmBxF,EAAShC,Q,2SCHzC,MAAMyH,GAAiB9G,YAAO7B,KAAYwC,MAAM,CAC9CtC,QAAS,YADY2B,CAAH,MAUdU,GAAcV,YAAO7B,KAAYwC,MAAM,CAC3CtC,QAAS,YADS2B,CAAH,MASF,SAAGT,QAAOF,QAAO0H,WAAW5F,WACzC,MAAM6F,EAAcC,iBAAO1H,EAAO,EAAGM,aAAcA,EAAOR,GAAOgE,OAAO,CAACC,EAAKC,IAAUA,EAAQD,EAAK,IACrG,OACE,oCACE,kBAACY,EAAA,EAAD,CAAM5G,UAAU,OACb0J,EAAY7C,IAAKzE,GAChB,kBAACqD,EAAA,EAAD,CAAUf,IAAG,UAAKtC,EAAKR,MAAV,OAAiBG,IAC5B,kBAACyB,EAAA,EAAD,CAAcrD,mBAAiB,GAC7B,kBAACyJ,GAAA,EAAD,CAAM5I,SAAO,EAAC6I,MAAM,SAASC,QAAQ,iBACnC,kBAACjJ,EAAA,EAAD,CAAYE,QAAQ,SAASqB,EAAKR,MAClC,kBAAC4H,GAAD,KAAiBpH,EAAKG,OAAOR,GAAOgE,OAAO,CAACC,EAAKC,IAAUA,EAAQD,EAAK,KAE1E,kBAAC4D,GAAA,EAAD,CAAM5J,UAAU,KAAKgB,SAAO,EAAC6I,MAAM,SAASC,QAAQ,YACjDjD,cAAIzE,EAAKG,OAAOR,GAAQ,CAAC0B,EAAOC,IAC/B,wBAAIgB,IAAKhB,GACP,kBAAC,GAAD,KAAcD,UAQ5B,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAmB1B,MAAOA,EAAO6B,UAAW6F,O,sCC9CrC,QACb,MAAMM,EAAWC,cAGjB,OACE,kBAAC,KAAD,KACE,kBAACpF,EAAA,EAAD,CAAY3D,MAAM,UAAU6D,QAJf,IAAMiF,GAAU,IAK3B,kBAAChF,EAAA,EAAD,oBAEF,kBAAC,KAAD,CAAUkF,GAAG,WACb,kBAAC,KAAD,MACA,kBAAC,KAAD,Q,SCPS,eACb,MAAM,QAAElG,EAAF,MAAWhC,GAAUC,cACrBkI,EAAOhI,eACNiC,GAAKC,cACN2F,EAAWC,cAEXG,EAAW,IAAMJ,EAAS,UAAD,OAAWhG,IACpCqG,EAAWF,GAAQA,EAAKnI,QAAUA,EACxC,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYD,SAAU,kBAACuI,EAAA,EAAD,CAAiBhB,KAAK,UAAUiB,QAASnG,EAAE,yBAC9DiG,EAAW,kBAAC,GAAD,CAAQrI,MAAOA,EAAO6F,MAAOuC,IAAe,kBAACI,GAAD,CAActI,MAAOiI,EAAOA,EAAKjI,MAAQ,GAAIF,MAAOA,EAAO0H,SAAUU,MAGjI,kBAACK,GAAA,EAAD","file":"static/js/r.05c09691.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import { useParams } from 'react-router-dom'\nimport useGame from 'components/game/useGame'\n\nexport default ({ children, fallback = null }) => {\n  const { round } = useParams()\n  const { teams } = useGame()\n\n  return teams.some((team) => Object.keys(team.rounds).includes(round)) ? children : fallback\n}\n","import styled from 'styled-components'\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.5rem 1rem;\n\n  > button {\n    flex: 1 1 100%;\n    margin: 0.25rem 0;\n  }\n`\n\nexport default ButtonsWrapper\n","import { createContext } from 'react'\n\nexport default createContext([])\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import styled from 'styled-components'\nimport MuiCardHeader from '@material-ui/core/CardHeader'\n\nconst CardHeader = styled(MuiCardHeader)`\n  padding: 0.5rem;\n\n  span {\n    font-size: 11px;\n  }\n`\n\nexport default CardHeader\n","import styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\nconst StyledScore = styled(Typography).attrs({\n  align: 'center',\n  component: 'div',\n})`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nexport default StyledScore\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { noop } from 'lodash'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nimport ModalConfirm from 'common/modal/Confirm'\nimport GameStoreContext from 'components/game/context/Store'\nimport { removeScore } from '../actionCreators'\n\nconst StyledListItemText = styled(ListItemText)`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  gap: 5px;\n`\n\nexport default ({ score, index, scoreIndex, onSuccess = noop, onClose = noop }) => {\n  const { gameKey, round } = useParams()\n  const [, dispatch] = useContext(GameStoreContext)\n  const [t] = useTranslation()\n  const handleRemove = () => {\n    dispatch(removeScore(gameKey, round, index, scoreIndex))\n    onSuccess()\n  }\n  return (\n    <StyledListItemText component=\"div\" disableTypography>\n      <ModalConfirm\n        color=\"primary\"\n        cancelText={t('button.cancel')}\n        confirmText={t('button.remove')}\n        title={t('title.removeScore')}\n        subtitle={t('messages.confirmRemoveScore')}\n        size=\"small\"\n        onConfirm={handleRemove}\n      />\n      <Typography align=\"center\" variant=\"body2\">\n        {score}\n      </Typography>\n      <IconButton color=\"primary\" size=\"small\" aria-label={t('button.cancel')} onClick={onClose}>\n        <Icon>check</Icon>\n      </IconButton>\n    </StyledListItemText>\n  )\n}\n","export const addScores = (key, round, scores) => ({\n  type: 'S++',\n  key,\n  round,\n  scores,\n})\n\nexport const removeScore = (key, round, index, scoreIndex) => ({\n  type: 'S-',\n  key,\n  round,\n  index,\n  scoreIndex,\n})\n","import React, { useState } from 'react'\nimport ListItem from '@material-ui/core/ListItem'\n\nimport SlideLongRippleSwitch from 'common/SlideLongRippleSwitch'\nimport StyledScore from 'common/StyledScore'\nimport useLongRipple from 'common/useLongRipple'\nimport RoundScoreRemove from './form/ScoreRemove'\n\nexport default ({ index, score, scoreIndex }) => {\n  const [canClose, setCanClose] = useState(false)\n  const handleEditMode = () => setCanClose(true)\n  const handleViewMode = () => setCanClose(false)\n  const rippleProps = useLongRipple({ onLongPress: handleEditMode })\n\n  return (\n    <SlideLongRippleSwitch active={canClose ? 0 : 1}>\n      <RoundScoreRemove onClose={handleViewMode} onSuccess={handleViewMode} scoreIndex={scoreIndex} score={score} index={index} />\n      <ListItem button dense {...rippleProps}>\n        <StyledScore variant=\"body2\">{score}</StyledScore>\n      </ListItem>\n    </SlideLongRippleSwitch>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport ListItem from '@material-ui/core/ListItem'\nimport StyledScore from 'common/StyledScore'\nimport { themeColors } from 'themes'\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 1px solid ${themeColors.border};\n`\n\nexport default ({ rounds = [], round }) => (\n  <StyledListItem component=\"div\">\n    <StyledScore variant=\"overline\">{rounds[round].reduce((sum, value) => value + sum, 0)}</StyledScore>\n  </StyledListItem>\n)\n","import styled from 'styled-components'\nimport TextField from '@material-ui/core/TextField'\n\nexport default styled(TextField).attrs({\n  margin: 'dense',\n  variant: 'outlined',\n  type: 'text',\n})`\n  width: 100px;\n\n  input {\n    text-align: center;\n  }\n`\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { map } from 'lodash'\nimport Card from '@material-ui/core/Card'\nimport List from '@material-ui/core/List'\n\nimport CardHeader from 'common/card/Header'\nimport GameScoresContext from 'components/game/context/Scores'\nimport GameRoundScore from 'components/game/round/Score'\nimport GameRoundSum from 'components/game/round/Sum'\nimport { onEnter } from 'utils/handlers'\nimport RoundListField from './Field'\n\nconst StyledRoundListItemContent = styled.div`\n  padding: 16px;\n  text-align: center;\n`\n\nexport default ({ index, name, rounds, round, onEnter: handleEnter }) => {\n  const teamScores = rounds[round]\n  const [roundScores, setRoundScores] = useContext(GameScoresContext)\n  const teamScoreValue = roundScores[index]\n  const handleChange = ({ target }) => {\n    setRoundScores(roundScores.map((score, i) => (i === index ? target.value : score)))\n  }\n  const handleOnlyNumbers = (event) => {\n    if (event.key.length > 1 || /[0-9]|-|\\.|,/.test(event.key)) {\n      return true\n    }\n    event.preventDefault()\n    return false\n  }\n  return (\n    <li>\n      <Card>\n        <CardHeader title={name} titleTypographyProps={{ align: 'center' }} />\n        <StyledRoundListItemContent>\n          <List component=\"div\" dense>\n            {map(teamScores, (score, key) => (\n              <GameRoundScore key={key} score={score} index={index} scoreIndex={key} />\n            ))}\n            <GameRoundSum rounds={rounds} round={round} />\n          </List>\n          <RoundListField\n            inputProps={{\n              tabIndex: index + 1,\n              pattern: '-?\\\\d*',\n            }}\n            onChange={handleChange}\n            onKeyDown={onEnter(handleEnter, handleOnlyNumbers)}\n            value={teamScoreValue}\n          />\n        </StyledRoundListItemContent>\n      </Card>\n    </li>\n  )\n}\n","import styled from 'styled-components'\n\nexport default styled.ul`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n  padding: 1rem;\n`\n","import React from 'react'\nimport { isEmpty, noop } from 'lodash'\nimport TeamListEmpty from 'components/game/team/list/Empty'\n\nimport RoundListItem from './Item'\nimport RoundListWrapper from './Wrapper'\n\nexport default ({ teams = [], round, onSubmit = noop }) =>\n  isEmpty(teams) ? (\n    <TeamListEmpty />\n  ) : (\n    <RoundListWrapper>\n      {teams.map((team, key) => (\n        <RoundListItem key={team.name} index={key} round={round} onEnter={onSubmit} {...team} />\n      ))}\n    </RoundListWrapper>\n  )\n","import React, { useContext, useState } from 'react'\nimport { noop } from 'lodash'\nimport { useTranslation } from 'react-i18next'\nimport Button from '@material-ui/core/Button'\nimport Modal from '@material-ui/core/Modal'\nimport Typography from '@material-ui/core/Typography'\n\nimport ButtonsWrapper from 'common/ButtonsWrapper'\nimport ModalActions from 'common/modal/Actions'\nimport ModalContent from 'common/modal/Content'\nimport GameStoreContext from 'components/game/context/Store'\nimport { endRound } from 'components/game/actionCreators'\n\nexport default ({ gameKey, round, onEnd = noop }) => {\n  const [open, setOpen] = useState(false)\n  const [t] = useTranslation()\n  const [, dispatch] = useContext(GameStoreContext)\n  const toggleOpen = () => setOpen(!open)\n\n  const handleSubmit = () => {\n    dispatch(endRound(gameKey, round))\n    setOpen(false)\n    onEnd(round)\n  }\n\n  return (\n    <>\n      <ButtonsWrapper>\n        <Button color=\"primary\" variant=\"contained\" aria-owns={open ? 'confirm-end-dialog' : undefined} aria-haspopup=\"true\" onClick={toggleOpen}>\n          {t('button.endGame')}\n        </Button>\n      </ButtonsWrapper>\n      <Modal id=\"confirm-end-dialog\" aria-labelledby=\"confirm-end-title\" aria-describedby=\"confirm-end-description\" open={open} onClose={toggleOpen}>\n        <ModalContent>\n          <Typography variant=\"h6\" id=\"confirm-end-title\">\n            {t('button.endGame')}\n          </Typography>\n          <Typography variant=\"subtitle1\" id=\"confirm-end-description\">\n            {t('messages.confirmEndGame')}\n          </Typography>\n          <ModalActions>\n            <Button onClick={toggleOpen}>{t('button.cancel')}</Button>\n            <Button color=\"primary\" autoFocus onClick={handleSubmit}>\n              {t('button.endGame')}\n            </Button>\n          </ModalActions>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport ButtonsWrapper from 'common/ButtonsWrapper'\n\nimport GameStoreContext from './context/Store'\nimport GameScoresContext from './context/Scores'\nimport RoundList from './round/list/List'\nimport RoundEnd from './round/action/End'\nimport { addScores } from './round/actionCreators'\nimport useGame from './useGame'\n\nexport default ({ round, onEnd }) => {\n  const { gameKey } = useParams()\n  const { teams = [] } = useGame()\n  const [, dispatch] = useContext(GameStoreContext)\n  const initialState = Array.from({ length: teams.length }, () => '')\n  const state = useState(initialState)\n  const [t] = useTranslation()\n\n  const handleSubmit = () => {\n    const [scores, setScores] = state\n    if (scores.some((score) => typeof Number(score) === 'number')) {\n      dispatch(\n        addScores(\n          gameKey,\n          round,\n          scores.map((score) => Number.parseInt(score, 10)),\n        ),\n      )\n      setScores(initialState)\n    }\n  }\n  return (\n    <GameScoresContext.Provider value={state}>\n      <RoundList teams={teams} round={round} onSubmit={handleSubmit} />\n      <ButtonsWrapper>\n        <Button icon=\"plus\" color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n          {t('button.sum')}\n        </Button>\n      </ButtonsWrapper>\n      <RoundEnd gameKey={gameKey} round={round} onEnd={onEnd} />\n    </GameScoresContext.Provider>\n  )\n}\n","import { noop } from 'lodash'\nimport React, { useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nimport ModalConfirm from 'common/modal/Confirm'\nimport GameStoreContext from 'components/game/context/Store'\nimport { deleteChampionship } from 'components/game/team/actionCreators'\n\nexport default ({ round, onSuccess = noop }) => {\n  const [, dispatch] = useContext(GameStoreContext)\n  const { gameKey } = useParams()\n  const [t] = useTranslation()\n\n  const handleDelete = () => {\n    onSuccess()\n    dispatch(deleteChampionship(gameKey, round))\n  }\n\n  return (\n    <ModalConfirm\n      cancelText={t('button.cancel')}\n      confirmText={t('button.remove')}\n      title={t('title.removeTeam')}\n      subtitle={t('messages.confirmRemoveRound')}\n      color=\"primary\"\n      fab\n      size=\"small\"\n      variant=\"contained\"\n      onConfirm={handleDelete}\n    />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { map, noop, sortBy } from 'lodash'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nimport ButtonsWrapper from 'common/ButtonsWrapper'\nimport Flex from 'common/Flex'\n\nimport RoundActionDelete from './action/Delete'\n\nconst StyledSumScore = styled(Typography).attrs({\n  variant: 'overline',\n})`\n  && {\n    font-size: 2rem;\n    text-align: right;\n    line-height: 1.2;\n  }\n`\n\nconst StyledScore = styled(Typography).attrs({\n  variant: 'overline',\n})`\n  && {\n    font-size: 0.875rem;\n    margin-left: 0.875rem;\n  }\n`\n\nexport default ({ teams, round, onDelete = noop }) => {\n  const sortedTeams = sortBy(teams, ({ rounds }) => -rounds[round].reduce((sum, value) => value + sum, 0))\n  return (\n    <>\n      <List component=\"div\">\n        {sortedTeams.map((team) => (\n          <ListItem key={`${team.name}${round}`}>\n            <ListItemText disableTypography>\n              <Flex display items=\"center\" justify=\"space-between\">\n                <Typography variant=\"body1\">{team.name}</Typography>\n                <StyledSumScore>{team.rounds[round].reduce((sum, value) => value + sum, 0)}</StyledSumScore>\n              </Flex>\n              <Flex component=\"ul\" display items=\"center\" justify=\"flex-end\">\n                {map(team.rounds[round], (score, index) => (\n                  <li key={index}>\n                    <StyledScore>{score}</StyledScore>\n                  </li>\n                ))}\n              </Flex>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n      <ButtonsWrapper>\n        <RoundActionDelete round={round} onSuccess={onDelete} />\n      </ButtonsWrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\n\nimport BarToolbar from 'common/bar/Toolbar'\nimport BarTitle from 'common/bar/Title'\nimport LocaleMenu from 'components/locale/Menu'\nimport ThemeMenu from 'components/theme/Menu'\n\nexport default () => {\n  const navigate = useNavigate()\n  const goToGame = () => navigate(-1)\n\n  return (\n    <BarToolbar>\n      <IconButton color=\"inherit\" onClick={goToGame}>\n        <Icon>arrow_back</Icon>\n      </IconButton>\n      <BarTitle pl=\"0.5rem\" />\n      <LocaleMenu />\n      <ThemeMenu />\n    </BarToolbar>\n  )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nimport WarnPlaceholder from 'common/WarnPlaceholder'\nimport GameGuard from './game/Guard'\nimport RoundGuard from './game/round/Guard'\n\nimport useGame from './game/useGame'\nimport Scores from './game/Scores'\nimport Championship from './game/round/Championship'\nimport RoundTop from './game/round/Top'\nimport PageViewTracker from './PageViewTracker'\n\nexport default () => {\n  const { gameKey, round } = useParams()\n  const game = useGame()\n  const [t] = useTranslation()\n  const navigate = useNavigate()\n\n  const goToGame = () => navigate(`/games/${gameKey}`)\n  const isActive = game && game.round === round\n  return (\n    <>\n      <RoundTop />\n      <GameGuard>\n        <RoundGuard fallback={<WarnPlaceholder icon=\"warning\" message={t('text.roundNotFound')} />}>\n          {isActive ? <Scores round={round} onEnd={goToGame} /> : <Championship teams={game ? game.teams : []} round={round} onDelete={goToGame} />}\n        </RoundGuard>\n      </GameGuard>\n      <PageViewTracker />\n    </>\n  )\n}\n"],"sourceRoot":""}