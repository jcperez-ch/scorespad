{"version":3,"file":"static/js/ch.729a718e.chunk.js","mappings":"oRAUe,SAASA,EAAmBC,GAAa,IAAZ,MAAEC,GAAOD,EACnD,MAAME,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAAAC,SAAA,EACTC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,UAAUC,QAJfC,IAAMT,GAAU,GAIiBI,UAC5CC,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAAAN,SAAC,kBAERC,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAAAP,SAAEL,KACXM,EAAAA,EAAAA,KAACO,EAAAA,EAAU,KACXP,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,MAGhB,C,oFCGIC,EAA4BC,EAAAA,YAAiB,SAAsBC,EAAOC,GAC5E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,GAAQC,EAAAA,EAAAA,GAAyBL,EAAO,CAAC,UAAW,cAEpDM,EAAUP,EAAAA,WAAiBQ,EAAAA,GAC/B,OAAoBR,EAAAA,cAAoB,OAAOS,EAAAA,EAAAA,GAAS,CACtDL,WAAWM,EAAAA,EAAAA,GAAKP,EAAQQ,KAAMP,EAAkC,eAAvBG,EAAQK,YAA+BT,EAAQU,qBACxFX,IAAKA,GACJG,GACL,IAwBA,SAAeS,EAAAA,EAAAA,IAtDK,SAAgBC,GAClC,MAAO,CAELJ,KAAM,CACJK,SAAU,GACVxB,MAAOuB,EAAME,QAAQC,OAAOC,OAC5BC,WAAY,EACZC,QAAS,eAIXR,oBAAqB,CACnBS,UAAW,GAGjB,GAuCkC,CAChCC,KAAM,mBADR,CAEGxB,G,aCvDY,SAASyB,EAAyBzC,GAAgB,IAAf,SAAE0C,GAAU1C,EAC5D,MAAM,QAAE2C,IAAYC,EAAAA,EAAAA,MACd1C,GAAWC,EAAAA,EAAAA,OACV0C,IAAKC,EAAAA,EAAAA,KAENC,EAAW,IAAIC,KAAKC,SAASP,EAAU,KAE7C,OACEtC,EAAAA,EAAAA,MAAC8C,EAAAA,EAAQ,CAACC,QAAM,EAACzC,QAJM0C,IAAMlD,EAAU,UAASyC,YAAkBD,KAIvBpC,SAAA,EACzCC,EAAAA,EAAAA,KAACS,EAAY,CAAAV,UACXC,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAACH,MAAM,UAASH,SAAC,YAExBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAY,CAAA/C,SAAEuC,EAAE,oBAAqB,CAAES,KAAMP,EAASQ,eAAgBC,KAAMT,EAASU,2BAG5F,CCZe,SAASC,IACtB,MAAM,MAAEC,IAAUf,EAAAA,EAAAA,OACVJ,KAAMoB,EAAQ,MAAEC,IAAUC,EAAAA,EAAAA,MAC5B,cAAEC,EAAevB,KAAMwB,GAAaH,EAAMF,GAChD,OACEvD,EAAAA,EAAAA,MAAA6D,EAAAA,SAAA,CAAA3D,SAAA,EACEC,EAAAA,EAAAA,KAAC2D,EAAe,CAACjE,MAAQ,GAAE2D,OAAcI,OACzCzD,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CAAA7D,UACRC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAI,CAACC,UAAU,MAAK/D,SAClByD,EAAcO,KAAKC,IAClBhE,EAAAA,EAAAA,KAACkC,EAAyB,CAAoBC,SAAU6B,GAAxBA,UAItChE,EAAAA,EAAAA,KAACiE,EAAAA,EAAe,MAGtB,C","sources":["components/game/team/championship/Top.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","components/game/team/championship/ListItem.js","components/ChampionshipsList.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\n\nimport BarToolbar from 'common/bar/Toolbar';\nimport BarTitle from 'common/bar/Title';\nimport LocaleMenu from 'components/locale/Menu';\nimport ThemeMenu from 'components/theme/Menu';\n\nexport default function TeamChampionshipTop({ title }) {\n  const navigate = useNavigate();\n  const goToGame = () => navigate(-1);\n\n  return (\n    <BarToolbar>\n      <IconButton color=\"inherit\" onClick={goToGame}>\n        <Icon>arrow_back</Icon>\n      </IconButton>\n      <BarTitle>{title}</BarTitle>\n      <LocaleMenu />\n      <ThemeMenu />\n    </BarToolbar>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\n\nexport default function TeamChampionshipsListItem({ roundKey }) {\n  const { gameKey } = useParams();\n  const navigate = useNavigate();\n  const [t] = useTranslation();\n  const goToChampionship = () => navigate(`/games/${gameKey}/rounds/${roundKey}`);\n  const playedAt = new Date(parseInt(roundKey, 36));\n\n  return (\n    <ListItem button onClick={goToChampionship}>\n      <ListItemIcon>\n        <Icon color=\"primary\">star</Icon>\n      </ListItemIcon>\n      <ListItemText>{t('messages.playedAt', { date: playedAt.toDateString(), time: playedAt.toLocaleTimeString() })}</ListItemText>\n    </ListItem>\n  );\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport List from '@material-ui/core/List';\n\nimport GameGuard from './game/Guard';\n\nimport useGame from './game/useGame';\nimport PageViewTracker from './PageViewTracker';\nimport ChampionshipTop from './game/team/championship/Top';\nimport TeamChampionshipsListItem from './game/team/championship/ListItem';\n\nexport default function ChampionshipList() {\n  const { index } = useParams();\n  const { name: gameName, teams } = useGame();\n  const { championships, name: teamName } = teams[index];\n  return (\n    <>\n      <ChampionshipTop title={`${gameName} - ${teamName}`} />\n      <GameGuard>\n        <List component=\"div\">\n          {championships.map((championship) => (\n            <TeamChampionshipsListItem key={championship} roundKey={championship} />\n          ))}\n        </List>\n      </GameGuard>\n      <PageViewTracker />\n    </>\n  );\n}\n"],"names":["TeamChampionshipTop","_ref","title","navigate","useNavigate","_jsxs","BarToolbar","children","_jsx","IconButton","color","onClick","goToGame","Icon","BarTitle","LocaleMenu","ThemeMenu","ListItemIcon","React","props","ref","classes","className","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","theme","minWidth","palette","action","active","flexShrink","display","marginTop","name","TeamChampionshipsListItem","roundKey","gameKey","useParams","t","useTranslation","playedAt","Date","parseInt","ListItem","button","goToChampionship","ListItemText","date","toDateString","time","toLocaleTimeString","ChampionshipList","index","gameName","teams","useGame","championships","teamName","_Fragment","ChampionshipTop","GameGuard","List","component","map","championship","PageViewTracker"],"sourceRoot":""}