{"version":3,"file":"static/js/r.df634ec5.chunk.js","mappings":"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","sources":["components/game/round/Guard.js","common/ButtonsWrapper.js","components/game/context/Scores.js","../node_modules/@material-ui/core/esm/Card/Card.js","common/card/Header.js","common/StyledScore.js","components/game/round/actionCreators.js","components/game/round/form/ScoreRemove.js","components/game/round/Score.js","components/game/round/Sum.js","components/game/round/list/Field.js","components/game/round/list/Item.js","components/game/round/list/Wrapper.js","components/game/round/list/List.js","components/game/round/action/End.js","components/game/Scores.js","components/game/round/action/Delete.js","components/game/round/Championship.js","components/game/round/Top.js","components/Round.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport useGame from 'components/game/useGame';\n\nexport default ({ children, fallback = null }) => {\n  const { round } = useParams();\n  const { teams } = useGame();\n\n  return teams.some((team) => Object.keys(team.rounds).includes(round)) ? children : fallback;\n};\n","import styled from 'styled-components';\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.5rem 1rem;\n\n  > button {\n    flex: 1 1 100%;\n    margin: 0.25rem 0;\n  }\n`;\n\nexport default ButtonsWrapper;\n","import { createContext } from 'react';\n\nexport default createContext([]);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import styled from 'styled-components';\nimport MuiCardHeader from '@material-ui/core/CardHeader';\n\nconst CardHeader = styled(MuiCardHeader)`\n  padding: 0.5rem;\n\n  span {\n    font-size: 11px;\n  }\n`;\n\nexport default CardHeader;\n","import styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\n\nconst StyledScore = styled(Typography).attrs({\n  align: 'center',\n  component: 'div',\n})`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default StyledScore;\n","export const addScores = (key, round, scores) => ({\n  type: 'S++',\n  key,\n  round,\n  scores,\n});\n\nexport const removeScore = (key, round, index, scoreIndex) => ({\n  type: 'S-',\n  key,\n  round,\n  index,\n  scoreIndex,\n});\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport noop from 'utils/fn/noop';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ModalConfirm from 'common/modal/Confirm';\nimport GameStoreContext from 'components/game/context/Store';\nimport { removeScore } from '../actionCreators';\n\nconst StyledListItemText = styled(ListItemText)`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  gap: 5px;\n`;\n\nexport default function RoundFormScoreRemove({ score, index, scoreIndex, onSuccess = noop, onClose = noop }) {\n  const { gameKey, round } = useParams();\n  const [, dispatch] = useContext(GameStoreContext);\n  const [t] = useTranslation();\n  const handleRemove = () => {\n    dispatch(removeScore(gameKey, round, index, scoreIndex));\n    onSuccess();\n  };\n  return (\n    <StyledListItemText component=\"div\" disableTypography>\n      <ModalConfirm\n        color=\"primary\"\n        cancelText={t('button.cancel')}\n        confirmText={t('button.remove')}\n        title={t('title.removeScore')}\n        subtitle={t('messages.confirmRemoveScore')}\n        size=\"small\"\n        onConfirm={handleRemove}\n      />\n      <Typography align=\"center\" variant=\"body2\">\n        {score}\n      </Typography>\n      <IconButton color=\"primary\" size=\"small\" aria-label={t('button.cancel')} onClick={onClose}>\n        <Icon>check</Icon>\n      </IconButton>\n    </StyledListItemText>\n  );\n}\n","import React, { useState } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport SlideLongRippleSwitch from 'common/SlideLongRippleSwitch';\nimport StyledScore from 'common/StyledScore';\nimport useLongRipple from 'common/useLongRipple';\nimport RoundScoreRemove from './form/ScoreRemove';\n\nexport default function RoundScore({ index, score, scoreIndex }) {\n  const [canClose, setCanClose] = useState(false);\n  const handleEditMode = () => setCanClose(true);\n  const handleViewMode = () => setCanClose(false);\n  const rippleProps = useLongRipple({ onLongPress: handleEditMode });\n\n  return (\n    <SlideLongRippleSwitch active={canClose ? 0 : 1}>\n      <RoundScoreRemove onClose={handleViewMode} onSuccess={handleViewMode} scoreIndex={scoreIndex} score={score} index={index} />\n      <ListItem button dense {...rippleProps}>\n        <StyledScore variant=\"body2\">{score}</StyledScore>\n      </ListItem>\n    </SlideLongRippleSwitch>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ListItem from '@material-ui/core/ListItem';\nimport StyledScore from 'common/StyledScore';\nimport { themeColors } from 'themes';\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 1px solid ${themeColors.border};\n`;\n\nexport default function RoundSum({ rounds = [], round }) {\n  return (\n    <StyledListItem component=\"div\">\n      <StyledScore variant=\"overline\">{rounds[round].reduce((sum, value) => value + sum, 0)}</StyledScore>\n    </StyledListItem>\n  );\n}\n","import styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\n\nexport default styled(TextField).attrs({\n  margin: 'dense',\n  variant: 'outlined',\n  type: 'text',\n})`\n  width: 100px;\n\n  input {\n    text-align: center;\n  }\n`;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\n\nimport CardHeader from 'common/card/Header';\nimport GameScoresContext from 'components/game/context/Scores';\nimport GameRoundScore from 'components/game/round/Score';\nimport GameRoundSum from 'components/game/round/Sum';\nimport { onEnter } from 'utils/handlers';\nimport RoundListField from './Field';\n\nconst StyledRoundListItemContent = styled.div`\n  padding: 16px;\n  text-align: center;\n`;\n\nexport default function RoundListItem({ index, name, rounds, round, onEnter: handleEnter }) {\n  const teamScores = rounds[round];\n  const [roundScores, setRoundScores] = useContext(GameScoresContext);\n  const teamScoreValue = roundScores[index];\n  const handleChange = ({ target }) => {\n    setRoundScores(roundScores.map((score, i) => (i === index ? target.value : score)));\n  };\n  const handleOnlyNumbers = (event) => {\n    if (event.key.length > 1 || /[0-9]|-|\\.|,/.test(event.key)) {\n      return true;\n    }\n    event.preventDefault();\n    return false;\n  };\n  return (\n    <li>\n      <Card>\n        <CardHeader title={name} titleTypographyProps={{ align: 'center' }} />\n        <StyledRoundListItemContent>\n          <List component=\"div\" dense>\n            {teamScores.map((score, key) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <GameRoundScore key={key} score={score} index={index} scoreIndex={key} />\n            ))}\n            <GameRoundSum rounds={rounds} round={round} />\n          </List>\n          <RoundListField\n            inputProps={{\n              tabIndex: index + 1,\n              pattern: '-?\\\\d*',\n            }}\n            onChange={handleChange}\n            onKeyDown={onEnter(handleEnter, handleOnlyNumbers)}\n            value={teamScoreValue}\n          />\n        </StyledRoundListItemContent>\n      </Card>\n    </li>\n  );\n}\n","import styled from 'styled-components';\n\nexport default styled.ul`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n  padding: 1rem;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport WarnPlaceholder from 'common/WarnPlaceholder';\nimport noop from 'utils/fn/noop';\n\nimport RoundListItem from './Item';\nimport RoundListWrapper from './Wrapper';\n\nexport default function RoundList({ teams = [], round, onSubmit = noop }) {\n  const [t] = useTranslation();\n  return teams.length === 0 ? (\n    <WarnPlaceholder icon=\"people\" message={t('text.noTeams')} />\n  ) : (\n    <RoundListWrapper>\n      {teams.map((team, key) => (\n        <RoundListItem key={team.name} index={key} round={round} onEnter={onSubmit} {...team} />\n      ))}\n    </RoundListWrapper>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport noop from 'utils/fn/noop';\nimport { useTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\n\nimport ButtonsWrapper from 'common/ButtonsWrapper';\nimport ModalActions from 'common/modal/Actions';\nimport ModalContent from 'common/modal/Content';\nimport GameStoreContext from 'components/game/context/Store';\nimport { endRound } from 'components/game/actionCreators';\n\nexport default function RoundActionEnd({ gameKey, round, onEnd = noop }) {\n  const [open, setOpen] = useState(false);\n  const [t] = useTranslation();\n  const [, dispatch] = useContext(GameStoreContext);\n  const toggleOpen = () => setOpen(!open);\n\n  const handleSubmit = () => {\n    dispatch(endRound(gameKey, round));\n    setOpen(false);\n    onEnd(round);\n  };\n\n  return (\n    <>\n      <ButtonsWrapper>\n        <Button color=\"primary\" variant=\"contained\" aria-owns={open ? 'confirm-end-dialog' : undefined} aria-haspopup=\"true\" onClick={toggleOpen}>\n          {t('button.endGame')}\n        </Button>\n      </ButtonsWrapper>\n      <Modal id=\"confirm-end-dialog\" aria-labelledby=\"confirm-end-title\" aria-describedby=\"confirm-end-description\" open={open} onClose={toggleOpen}>\n        <ModalContent>\n          <Typography variant=\"h6\" id=\"confirm-end-title\">\n            {t('button.endGame')}\n          </Typography>\n          <Typography variant=\"subtitle1\" id=\"confirm-end-description\">\n            {t('messages.confirmEndGame')}\n          </Typography>\n          <ModalActions>\n            <Button onClick={toggleOpen}>{t('button.cancel')}</Button>\n            <Button color=\"primary\" variant=\"contained\" autoFocus onClick={handleSubmit}>\n              {t('button.endGame')}\n            </Button>\n          </ModalActions>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ButtonsWrapper from 'common/ButtonsWrapper';\n\nimport GameStoreContext from './context/Store';\nimport GameScoresContext from './context/Scores';\nimport RoundList from './round/list/List';\nimport RoundEnd from './round/action/End';\nimport { addScores } from './round/actionCreators';\nimport useGame from './useGame';\n\nexport default function GameScores({ round, onEnd }) {\n  const { gameKey } = useParams();\n  const { teams = [] } = useGame();\n  const [, dispatch] = useContext(GameStoreContext);\n  const initialState = Array.from({ length: teams.length }, () => '');\n  const state = useState(initialState);\n  const [t] = useTranslation();\n\n  const handleSubmit = () => {\n    const [scores, setScores] = state;\n    if (scores.some((score) => typeof Number(score) === 'number')) {\n      dispatch(\n        addScores(\n          gameKey,\n          round,\n          scores.map((score) => Number.parseInt(score, 10)),\n        ),\n      );\n      setScores(initialState);\n    }\n  };\n  return (\n    <GameScoresContext.Provider value={state}>\n      <RoundList teams={teams} round={round} onSubmit={handleSubmit} />\n      <ButtonsWrapper>\n        <Button icon=\"plus\" color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n          {t('button.sum')}\n        </Button>\n      </ButtonsWrapper>\n      <RoundEnd gameKey={gameKey} round={round} onEnd={onEnd} />\n    </GameScoresContext.Provider>\n  );\n}\n","import noop from 'utils/fn/noop';\nimport React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport ModalConfirm from 'common/modal/Confirm';\nimport GameStoreContext from 'components/game/context/Store';\nimport { deleteChampionship } from 'components/game/team/actionCreators';\n\nexport default function RoundActionDelete({ round, onSuccess = noop }) {\n  const [, dispatch] = useContext(GameStoreContext);\n  const { gameKey } = useParams();\n  const [t] = useTranslation();\n\n  const handleDelete = () => {\n    onSuccess();\n    dispatch(deleteChampionship(gameKey, round));\n  };\n\n  return (\n    <ModalConfirm\n      cancelText={t('button.cancel')}\n      confirmText={t('button.remove')}\n      title={t('title.removeTeam')}\n      subtitle={t('messages.confirmRemoveRound')}\n      color=\"primary\"\n      fab\n      size=\"small\"\n      variant=\"contained\"\n      onConfirm={handleDelete}\n    />\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ButtonsWrapper from 'common/ButtonsWrapper';\nimport Flex from 'common/Flex';\nimport noop from 'utils/fn/noop';\n\nimport RoundActionDelete from './action/Delete';\n\nconst StyledSumScore = styled(Typography).attrs({\n  variant: 'overline',\n})`\n  && {\n    font-size: 2rem;\n    text-align: right;\n    line-height: 1.2;\n  }\n`;\n\nconst StyledScore = styled(Typography).attrs({\n  variant: 'overline',\n})`\n  && {\n    font-size: 0.875rem;\n    margin-left: 0.875rem;\n  }\n`;\n\nexport default function RoundChampionship({ teams, round, onDelete = noop }) {\n  const teamTotal = ({ rounds }) => rounds[round].reduce((sum, value) => value + sum, 0);\n  const sortedTeams = [...teams].sort((team1, team2) => teamTotal(team2) - teamTotal(team1));\n  return (\n    <>\n      <List component=\"div\">\n        {sortedTeams.map((team) => (\n          <ListItem key={`${team.name}${round}`}>\n            <ListItemText disableTypography>\n              <Flex display items=\"center\" justify=\"space-between\">\n                <Typography variant=\"body1\">{team.name}</Typography>\n                <StyledSumScore>{teamTotal(team)}</StyledSumScore>\n              </Flex>\n              <Flex component=\"ul\" display items=\"center\" justify=\"flex-end\">\n                {team.rounds[round].map((score, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <li key={index}>\n                    <StyledScore>{score}</StyledScore>\n                  </li>\n                ))}\n              </Flex>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n      <ButtonsWrapper>\n        <RoundActionDelete round={round} onSuccess={onDelete} />\n      </ButtonsWrapper>\n    </>\n  );\n}\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\n\nimport BarToolbar from 'common/bar/Toolbar';\nimport BarTitle from 'common/bar/Title';\nimport LocaleMenu from 'components/locale/Menu';\nimport ThemeMenu from 'components/theme/Menu';\n\nexport default function RoundTop() {\n  const navigate = useNavigate();\n  const goToGame = () => navigate(-1);\n\n  return (\n    <BarToolbar>\n      <IconButton color=\"inherit\" onClick={goToGame}>\n        <Icon>arrow_back</Icon>\n      </IconButton>\n      <BarTitle pl=\"0.5rem\" />\n      <LocaleMenu />\n      <ThemeMenu />\n    </BarToolbar>\n  );\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport WarnPlaceholder from 'common/WarnPlaceholder';\nimport GameGuard from './game/Guard';\nimport RoundGuard from './game/round/Guard';\n\nimport useGame from './game/useGame';\nimport Scores from './game/Scores';\nimport Championship from './game/round/Championship';\nimport RoundTop from './game/round/Top';\nimport PageViewTracker from './PageViewTracker';\n\nexport default function Round() {\n  const { gameKey, round } = useParams();\n  const game = useGame();\n  const [t] = useTranslation();\n  const navigate = useNavigate();\n\n  const goToGame = () => navigate(`/games/${gameKey}`);\n  const isActive = game && game.round === round;\n  return (\n    <>\n      <RoundTop />\n      <GameGuard>\n        <RoundGuard fallback={<WarnPlaceholder icon=\"warning\" message={t('text.roundNotFound')} />}>\n          {isActive ? <Scores round={round} onEnd={goToGame} /> : <Championship teams={game ? game.teams : []} round={round} onDelete={goToGame} />}\n        </RoundGuard>\n      </GameGuard>\n      <PageViewTracker />\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);"],"names":["_ref","children","fallback","round","useParams","teams","useGame","some","team","Object","keys","rounds","includes","styled","createContext","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","MuiCardHeader","Typography","attrs","align","component","addScores","key","scores","type","removeScore","index","scoreIndex","StyledListItemText","ListItemText","RoundFormScoreRemove","score","onSuccess","noop","onClose","gameKey","dispatch","useContext","GameStoreContext","t","useTranslation","_jsxs","disableTypography","_jsx","ModalConfirm","color","cancelText","confirmText","title","subtitle","size","onConfirm","handleRemove","variant","IconButton","onClick","Icon","RoundScore","canClose","setCanClose","useState","handleViewMode","rippleProps","useLongRipple","onLongPress","handleEditMode","SlideLongRippleSwitch","active","RoundScoreRemove","ListItem","button","dense","StyledScore","StyledListItem","themeColors","RoundSum","reduce","sum","value","TextField","margin","StyledRoundListItemContent","RoundListItem","onEnter","handleEnter","teamScores","roundScores","setRoundScores","GameScoresContext","teamScoreValue","CardHeader","titleTypographyProps","List","map","GameRoundScore","GameRoundSum","RoundListField","inputProps","tabIndex","pattern","onChange","_ref2","target","i","onKeyDown","event","length","test","preventDefault","RoundList","onSubmit","WarnPlaceholder","icon","message","RoundListWrapper","RoundActionEnd","onEnd","open","setOpen","toggleOpen","_Fragment","ButtonsWrapper","Button","undefined","Modal","id","ModalContent","ModalActions","autoFocus","handleSubmit","endRound","GameScores","initialState","Array","from","state","setScores","Number","parseInt","RoundEnd","RoundActionDelete","fab","handleDelete","deleteChampionship","StyledSumScore","RoundChampionship","onDelete","teamTotal","sortedTeams","sort","team1","team2","Flex","display","items","justify","RoundTop","navigate","useNavigate","BarToolbar","goToGame","BarTitle","pl","LocaleMenu","ThemeMenu","Round","game","isActive","GameGuard","RoundGuard","Scores","Championship","PageViewTracker","action","avatar","_props$component","Component","_props$disableTypogra","subheaderProp","subheader","subheaderTypographyProps","titleProp","content","alignItems","padding","flex","marginRight","alignSelf","marginTop"],"sourceRoot":""}