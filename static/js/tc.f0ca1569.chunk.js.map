{"version":3,"file":"static/js/tc.f0ca1569.chunk.js","mappings":"kKAGA,SAASA,EAAQC,EAAOC,GACtB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACF,IAAKA,EAAKG,UAAU,QAASJ,GAC7C,CAEA,SAAeK,EAAAA,EAAAA,YAAWN,E,0DCJ1B,MAOA,GAPuBO,EAAAA,EAAAA,IAAOC,EAAAA,GAAYC,MAAM,CAC9CC,QAAS,QACTC,cAAc,GACb;;4GCEH,MAAMC,EAAgBL,EAAAA,GAAAA,EAAU;6BACHM,EAAAA,GAAAA;EAGvBC,EAAkBP,EAAAA,GAAAA,GAAW;;;;EAM7BQ,GAAaR,EAAAA,EAAAA,IAAOC,EAAAA,GAAYC,MAAM,CAC1CO,UAAW,KACXN,QAAS,YACR;;;;EAMH,SAASO,EAAWC,EAAkChB,GAAM,IAAvC,SAAEiB,EAAQ,QAAEC,KAAYnB,GAAOiB,EAClD,OACEf,EAAAA,EAAAA,KAACS,EAAa,CAACV,IAAKA,KAASD,EAAKkB,UAChCE,EAAAA,EAAAA,MAACP,EAAe,CAAAK,SAAA,EACdhB,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAACC,MAAM,UAAUC,QAASJ,EAAQD,UAC3ChB,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAAAN,SAAC,aAERhB,EAAAA,EAAAA,KAACY,EAAU,CAAAI,SAAEA,QAIrB,CAEA,SAAeb,EAAAA,EAAAA,YAAWW,E,wNCtBX,SAASS,IACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,IAAKC,EAAAA,EAAAA,KACNC,GAAWC,EAAAA,EAAAA,OACVC,IAAgBC,EAAAA,EAAAA,OAChB,CAAEC,IAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IAC1B,QAAEC,IAAYC,EAAAA,EAAAA,OACd,MAAEC,IAAUC,EAAAA,EAAAA,KAEZC,EAAcA,IAAMX,EAAU,UAASO,MACvC,MAAEK,EAAK,SAAEC,IAAaC,EAAAA,EAAAA,GAAc,CACxCnB,OACAoB,aAAc,0BACdF,SAAUA,KACRT,GAASY,EAAAA,EAAAA,IAAWT,EAASE,EAAOd,IACpCgB,GAAa,IAIjB,OACEtB,EAAAA,EAAAA,MAAC4B,EAAAA,EAAM,CAACC,YAAU,EAACC,GAAG,kBAAkB/B,QAASuB,EAAa,kBAAgB,wBAAwBS,MAAI,EAACC,oBAAqBrD,EAAAA,EAAQmB,SAAA,EACtIhB,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACkC,GAAG,wBAAwB/B,QAASuB,EAAYxB,SAC1DW,EAAE,oBAELT,EAAAA,EAAAA,MAACiC,EAAAA,EAAa,CAAAnC,SAAA,EACZhB,EAAAA,EAAAA,KAACoD,EAAAA,EAAc,CAAApC,SAAEe,EAAasB,IAAI,QAAU1B,EAAE,6BAA+BA,EAAE,sBAC/E3B,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,CAACC,MAAO5B,EAAE,wBAAyB6B,SAAU/B,EAASgC,QAASf,EAAUD,MAAOA,EAAOiB,MAAOlC,QAE1GN,EAAAA,EAAAA,MAACyC,EAAAA,EAAa,CAAA3C,SAAA,EACZhB,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACvC,QAASmB,EAAYxB,SAAEW,EAAE,oBACjC3B,EAAAA,EAAAA,KAAC4D,EAAAA,EAAM,CAACrD,QAAQ,YAAYa,MAAM,UAAUC,QAASA,IAAMqB,IAAW1B,SACnEW,EAAE,qBAKb,C","sources":["common/SlideUp.js","common/dialog/Headline.js","common/dialog/Title.js","components/game/team/form/Create.js"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport Slide from '@material-ui/core/Slide';\n\nfunction SlideUp(props, ref) {\n  return <Slide ref={ref} direction=\"up\" {...props} />;\n}\n\nexport default forwardRef(SlideUp);\n","import styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\n\nconst DialogHeadline = styled(Typography).attrs({\n  variant: 'body2',\n  gutterBottom: true,\n})`\n  padding: 1rem 0 0.5rem;\n`;\n\nexport default DialogHeadline;\n","import React, { forwardRef } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport styled from 'styled-components';\n\nimport { themeColors } from 'themes';\n\nconst StyledWrapper = styled.h4`\n  border-bottom: 1px solid ${themeColors.border};\n`;\n\nconst StyledContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst StyledText = styled(Typography).attrs({\n  component: 'h4',\n  variant: 'overline',\n})`\n  && {\n    margin-left: 0.75rem;\n  }\n`;\n\nfunction DialogTitle({ children, onClose, ...props }, ref) {\n  return (\n    <StyledWrapper ref={ref} {...props}>\n      <StyledContainer>\n        <IconButton color=\"primary\" onClick={onClose}>\n          <Icon>close</Icon>\n        </IconButton>\n        <StyledText>{children}</StyledText>\n      </StyledContainer>\n    </StyledWrapper>\n  );\n}\n\nexport default forwardRef(DialogTitle);\n","import React, { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport SlideUp from 'common/SlideUp';\nimport DialogTitle from 'common/dialog/Title';\nimport DialogHeadline from 'common/dialog/Headline';\nimport NameField from 'common/NameField';\nimport GameStoreContext from 'components/game/context/Store';\nimport useValidation from 'utils/validation';\n\nimport { createTeam } from '../actionCreators';\nimport useGame from '../../useGame';\n\nexport default function TeamFormCreate() {\n  const [name, setName] = useState('');\n  const [t] = useTranslation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [, dispatch] = useContext(GameStoreContext);\n  const { gameKey } = useParams();\n  const { round } = useGame();\n\n  const handleClose = () => navigate(`/games/${gameKey}`);\n  const { error, onSubmit } = useValidation({\n    name,\n    errorMessage: 'errors.requiredTeamName',\n    onSubmit: () => {\n      dispatch(createTeam(gameKey, round, name));\n      handleClose();\n    },\n  });\n\n  return (\n    <Dialog fullScreen id=\"team-add-dialog\" onClose={handleClose} aria-labelledby=\"team-add-dialog-title\" open TransitionComponent={SlideUp}>\n      <DialogTitle id=\"team-add-dialog-title\" onClose={handleClose}>\n        {t('title.addTeam')}\n      </DialogTitle>\n      <DialogContent>\n        <DialogHeadline>{searchParams.has('step') ? t('text.addNewTeamForNewGame') : t('text.addNewTeam')}</DialogHeadline>\n        <NameField label={t('placeholder.teamName')} onChange={setName} onEnter={onSubmit} error={error} value={name} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>{t('button.cancel')}</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => onSubmit()}>\n          {t('button.add')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"names":["SlideUp","props","ref","_jsx","Slide","direction","forwardRef","styled","Typography","attrs","variant","gutterBottom","StyledWrapper","themeColors","StyledContainer","StyledText","component","DialogTitle","_ref","children","onClose","_jsxs","IconButton","color","onClick","Icon","TeamFormCreate","name","setName","useState","t","useTranslation","navigate","useNavigate","searchParams","useSearchParams","dispatch","useContext","GameStoreContext","gameKey","useParams","round","useGame","handleClose","error","onSubmit","useValidation","errorMessage","createTeam","Dialog","fullScreen","id","open","TransitionComponent","DialogContent","DialogHeadline","has","NameField","label","onChange","onEnter","value","DialogActions","Button"],"sourceRoot":""}