{"version":3,"file":"static/js/ch.1ae22e5e.chunk.js","mappings":"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","sources":["components/game/team/championship/Top.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","components/game/team/championship/ListItem.js","components/ChampionshipsList.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport IconButton from '@mui/material/IconButton';\nimport Icon from '@mui/material/Icon';\n\nimport BarToolbar from 'common/bar/Toolbar';\nimport BarTitle from 'common/bar/Title';\nimport LocaleMenu from 'components/locale/Menu';\nimport ThemeMenu from 'components/theme/Menu';\n\nexport default function TeamChampionshipTop({ title }) {\n  const navigate = useNavigate();\n  const goToGame = () => navigate(-1);\n\n  return (\n    <BarToolbar>\n      <IconButton color=\"inherit\" onClick={goToGame} size=\"large\">\n        <Icon>arrow_back</Icon>\n      </IconButton>\n      <BarTitle>{title}</BarTitle>\n      <LocaleMenu />\n      <ThemeMenu />\n    </BarToolbar>\n  );\n}\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport Icon from '@mui/material/Icon';\n\nexport default function TeamChampionshipsListItem({ roundKey }) {\n  const { gameKey } = useParams();\n  const navigate = useNavigate();\n  const [t] = useTranslation();\n  const goToChampionship = () => navigate(`/games/${gameKey}/rounds/${roundKey}`);\n  const playedAt = new Date(parseInt(roundKey, 36));\n\n  return (\n    <ListItem button onClick={goToChampionship}>\n      <ListItemIcon>\n        <Icon color=\"secondary\">star</Icon>\n      </ListItemIcon>\n      <ListItemText disableTypography>\n        <Typography color=\"secondary\" variant=\"overline\">\n          {t('messages.playedAt', { date: playedAt.toDateString(), time: playedAt.toLocaleTimeString() })}\n        </Typography>\n      </ListItemText>\n    </ListItem>\n  );\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport List from '@mui/material/List';\n\nimport GameGuard from './game/Guard';\n\nimport useGame from './game/useGame';\nimport PageViewTracker from './PageViewTracker';\nimport ChampionshipTop from './game/team/championship/Top';\nimport TeamChampionshipsListItem from './game/team/championship/ListItem';\n\nexport default function ChampionshipList() {\n  const { index } = useParams();\n  const { name: gameName, teams } = useGame();\n  const { championships, name: teamName } = teams[index];\n  return (\n    <>\n      <ChampionshipTop title={`${gameName} - ${teamName}`} />\n      <GameGuard>\n        <List component=\"div\">\n          {championships.map((championship) => (\n            <TeamChampionshipsListItem key={championship} roundKey={championship} />\n          ))}\n        </List>\n      </GameGuard>\n      <PageViewTracker />\n    </>\n  );\n}\n"],"names":["TeamChampionshipTop","_ref","title","navigate","useNavigate","_jsxs","BarToolbar","children","_jsx","IconButton","color","onClick","goToGame","size","Icon","BarTitle","LocaleMenu","ThemeMenu","_excluded","ListItemIconRoot","styled","name","slot","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","theme","_extends","minWidth","vars","palette","action","active","flexShrink","display","marginTop","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","getListItemIconUtilityClass","useUtilityClasses","clsx","TeamChampionshipsListItem","roundKey","gameKey","useParams","t","useTranslation","playedAt","Date","parseInt","ListItem","button","goToChampionship","ListItemIcon","ListItemText","disableTypography","Typography","variant","date","toDateString","time","toLocaleTimeString","ChampionshipList","index","gameName","teams","useGame","championships","teamName","_Fragment","ChampionshipTop","GameGuard","List","component","map","championship","PageViewTracker"],"sourceRoot":""}