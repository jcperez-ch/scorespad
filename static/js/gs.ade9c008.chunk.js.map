{"version":3,"sources":["common/dialog/Title.js","common/SlideUp.js","common/dialog/Headline.js","components/game/action/Share.js"],"names":["StyledWrapper","styled","h4","themeColors","border","StyledContainer","div","StyledText","Typography","attrs","component","variant","forwardRef","ref","children","onClose","props","color","onClick","direction","DialogHeadline","gutterBottom","gameKey","useParams","games","useContext","GameStoreContext","dataUrl","setDataUrl","useState","open","setOpen","t","useTranslation","navigate","useNavigate","location","useLocation","matchesLarge","useMediaQuery","handleClose","handleGenerate","useCallback","async","QRCode","toDataURL","document","getElementById","code","width","useEffect","game","JSON","stringify","id","fullScreen","aria-labelledby","TransitionComponent","SlideUp","onExited","state","from","useMemo","style","textAlign","src","alt","autoFocus"],"mappings":"kiBAQA,MAAMA,EAAgBC,IAAOC,GAAV,IACUC,IAAYC,QAGnCC,EAAkBJ,IAAOK,IAAV,KAMfC,EAAaN,YAAOO,KAAYC,MAAM,CAC1CC,UAAW,KACXC,QAAS,YAFQV,CAAH,KAoBDW,yBAXK,CAAC,EAAiCC,KAAlC,IAAC,SAAEC,EAAF,QAAYC,GAAb,EAAyBC,EAAzB,6CAClB,kBAAChB,EAAD,eAAea,IAAKA,GAASG,GAC3B,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAYY,MAAM,UAAUC,QAASH,GACnC,kBAAC,IAAD,eAEF,kBAACR,EAAD,KAAaO,Q,iCCjCnB,6BAKeF,yBAFC,CAACI,EAAOH,IAAQ,kBAAC,IAAD,eAAOA,IAAKA,EAAKM,UAAU,MAASH,M,iKCApE,MAAMI,EAAiBnB,YAAOO,KAAYC,MAAM,CAC9CE,QAAS,QACTU,cAAc,GAFOpB,CAAH,KAOLmB,O,mLCKA,eACb,MAAM,QAAEE,GAAYC,eACbC,GAASC,qBAAWC,MACpBC,EAASC,GAAcC,sBACvBC,EAAMC,GAAWF,oBAAS,IAC1BG,GAAKC,cACNC,EAAWC,cACXC,EAAWC,cACXC,EAAeC,YAAc,sBAC7BC,EAAc,KAClBT,GAAQ,IAMJU,EAAiBC,sBAAYC,UACjCf,QAAiBgB,IAAOC,UAAUC,SAASC,eAAe,UAAWC,EAAM,CAAEC,MAAO,QACnF,IAQH,OANAC,oBAAU,KACR,MAAMC,EAAO3B,EAAMF,GACf6B,GACFV,EAAeW,KAAKC,UAAL,aAAiBC,GAAIhC,GAAY6B,MAEjD,CAAC7B,EAASE,EAAOiB,IAElB,kBAAC,IAAD,CACEc,YAAU,EACVD,GAAG,oBACHE,kBAAgB,0BAChB1B,KAAMA,EACN2B,oBAAqBC,IACrB3C,QAASyB,EACTmB,SAtBiB,KACnBzB,EAASE,EAASwB,MAAMC,MAAQ,OAuB9B,kBAAC,IAAD,CAAaP,GAAG,0BAA0BvC,QAASyB,GAChDR,EAAE,oBAEL,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAiBA,EAAE,8BAClB8B,kBACC,IACE,yBAAKC,MAAOzB,EAAe,GAAK,CAAE0B,UAAW,WAAarC,GAAW,yBAAKsC,IAAKtC,EAASuC,IAAI,aAE9F,CAACvC,EAASW,IAEZ,kBAAC,IAAD,KACGN,EAAE,mCACH,6BACCA,EAAE,mCACH,6BACCA,EAAE,mCACH,6BACCA,EAAE,qCAGP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQrB,QAAQ,YAAYM,MAAM,UAAUkD,WAAS,EAACjD,QAASsB,GAC5DR,EAAE","file":"static/js/gs.ade9c008.chunk.js","sourcesContent":["import React, { forwardRef } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nimport { themeColors } from 'themes'\n\nconst StyledWrapper = styled.h4`\n  border-bottom: 1px solid ${themeColors.border};\n`\n\nconst StyledContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: flex-start;\n`\n\nconst StyledText = styled(Typography).attrs({\n  component: 'h4',\n  variant: 'overline',\n})`\n  && {\n    margin-left: 0.75rem;\n  }\n`\n\nconst DialogTitle = ({ children, onClose, ...props }, ref) => (\n  <StyledWrapper ref={ref} {...props}>\n    <StyledContainer>\n      <IconButton color=\"primary\" onClick={onClose}>\n        <Icon>close</Icon>\n      </IconButton>\n      <StyledText>{children}</StyledText>\n    </StyledContainer>\n  </StyledWrapper>\n)\n\nexport default forwardRef(DialogTitle)\n","import React, { forwardRef } from 'react'\nimport Slide from '@material-ui/core/Slide'\n\nconst SlideUp = (props, ref) => <Slide ref={ref} direction=\"up\" {...props} />\n\nexport default forwardRef(SlideUp)\n","import styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\nconst DialogHeadline = styled(Typography).attrs({\n  variant: 'body2',\n  gutterBottom: true,\n})`\n  padding: 1rem 0 0.5rem;\n`\n\nexport default DialogHeadline\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport QRCode from 'qrcode'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport SlideUp from 'common/SlideUp'\nimport DialogTitle from 'common/dialog/Title'\nimport DialogHeadline from 'common/dialog/Headline'\nimport GameStoreContext from 'components/game/context/Store'\n\nexport default () => {\n  const { gameKey } = useParams()\n  const [games] = useContext(GameStoreContext)\n  const [dataUrl, setDataUrl] = useState()\n  const [open, setOpen] = useState(true)\n  const [t] = useTranslation()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const matchesLarge = useMediaQuery('(min-width: 481px)')\n  const handleClose = () => {\n    setOpen(false)\n  }\n  const handleExited = () => {\n    navigate(location.state.from || '/')\n  }\n\n  const handleGenerate = useCallback(async (code) => {\n    setDataUrl(await QRCode.toDataURL(document.getElementById('qrcode'), code, { width: 290 }))\n  }, [])\n\n  useEffect(() => {\n    const game = games[gameKey]\n    if (game) {\n      handleGenerate(JSON.stringify({ id: gameKey, ...game }))\n    }\n  }, [gameKey, games, handleGenerate])\n  return (\n    <Dialog\n      fullScreen\n      id=\"game-share-dialog\"\n      aria-labelledby=\"game-share-dialog-title\"\n      open={open}\n      TransitionComponent={SlideUp}\n      onClose={handleClose}\n      onExited={handleExited}\n    >\n      <DialogTitle id=\"game-share-dialog-title\" onClose={handleClose}>\n        {t('title.shareGame')}\n      </DialogTitle>\n      <DialogContent>\n        <DialogHeadline>{t('messages.confirmShareGame')}</DialogHeadline>\n        {useMemo(\n          () => (\n            <div style={matchesLarge ? {} : { textAlign: 'center' }}>{dataUrl && <img src={dataUrl} alt=\"qr code\" />}</div>\n          ),\n          [dataUrl, matchesLarge],\n        )}\n        <DialogHeadline>\n          {t('messages.confirmShareGame_step1')}\n          <br />\n          {t('messages.confirmShareGame_step2')}\n          <br />\n          {t('messages.confirmShareGame_step3')}\n          <br />\n          {t('messages.confirmShareGame_step4')}\n        </DialogHeadline>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"primary\" autoFocus onClick={handleClose}>\n          {t('button.ok')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"sourceRoot":""}