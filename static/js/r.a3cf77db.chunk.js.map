{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","components/game/round/Guard.js","common/ButtonsWrapper.js","components/game/context/Scores.js","../node_modules/@material-ui/core/esm/Card/Card.js","common/card/Header.js","common/StyledScore.js","components/game/round/form/ScoreRemove.js","components/game/round/actionCreators.js","components/game/round/Score.js","components/game/round/Sum.js","components/game/round/list/Field.js","components/game/round/list/Item.js","components/game/round/list/Wrapper.js","components/game/round/list/List.js","components/game/round/action/End.js","components/game/Scores.js","components/game/round/action/Delete.js","components/game/round/Championship.js","components/game/round/Top.js","components/Round.js"],"names":["CardHeader","React","forwardRef","props","ref","action","avatar","classes","classNameProp","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","_objectWithoutProperties","type","Typography","createElement","_extends","variant","display","color","clsx","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","RoundGuard","children","fallback","round","useParams","teams","useGame","some","team","Object","keys","rounds","includes","ButtonsWrapper","styled","div","createContext","Card","_props$raised","raised","Paper","elevation","overflow","MuiCardHeader","StyledScore","attrs","align","StyledListItemText","ListItemText","RoundScoreRemove","score","index","scoreIndex","onSuccess","noop","onClose","gameKey","dispatch","useContext","GameStoreContext","t","useTranslation","cancelText","confirmText","subtitle","size","onConfirm","key","removeScore","IconButton","aria-label","onClick","Icon","GameRoundScore","canClose","setCanClose","useState","handleViewMode","rippleProps","useLongRipple","onLongPress","SlideLongRippleSwitch","active","ListItem","button","dense","StyledListItem","themeColors","border","GameRoundSum","reduce","sum","value","RoundListField","TextField","margin","StyledRoundListItemContent","RoundListItem","onEnter","handleEnter","teamScores","roundScores","setRoundScores","GameScoresContext","teamScoreValue","List","map","inputProps","tabIndex","pattern","onChange","target","i","onKeyDown","event","length","test","preventDefault","RoundListWrapper","ul","RoundList","onSubmit","isEmpty","RoundActionEnd","onEnd","open","setOpen","toggleOpen","Button","aria-owns","undefined","aria-haspopup","Modal","id","aria-labelledby","aria-describedby","autoFocus","endRound","GameScores","initialState","Array","from","state","handleSubmit","scores","setScores","Number","addScores","parseInt","Provider","icon","RoundActionDelete","fab","deleteChampionship","StyledSumScore","Championship","onDelete","sortedTeams","sortBy","Flex","items","justify","RoundTop","game","navigate","useNavigate","pl","Round","goToGame","isActive","WarnPlaceholder","message","PageViewTracker"],"mappings":"wGAAA,+DAwCIA,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,IAAIC,EAASF,EAAME,OACfC,EAASH,EAAMG,OACfC,EAAUJ,EAAMI,QAChBC,EAAgBL,EAAMM,UACtBC,EAAmBP,EAAMQ,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAwBV,EAAMW,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAgBZ,EAAMa,UACtBC,EAA2Bd,EAAMc,yBACjCC,EAAYf,EAAMgB,MAClBC,EAAuBjB,EAAMiB,qBAC7BC,EAAQC,YAAyBnB,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,YAAa,oBAAqB,YAAa,2BAA4B,QAAS,yBAEzKgB,EAAQD,EAEC,MAATC,GAAiBA,EAAMI,OAASC,KAAeV,IACjDK,EAAQlB,IAAMwB,cAAcD,IAAYE,YAAS,CAC/CC,QAASrB,EAAS,QAAU,KAC5BG,UAAWF,EAAQY,MACnBR,UAAW,OACXiB,QAAS,SACRR,GAAuBD,IAG5B,IAAIH,EAAYD,EAYhB,OAViB,MAAbC,GAAqBA,EAAUO,OAASC,KAAeV,IACzDE,EAAYf,IAAMwB,cAAcD,IAAYE,YAAS,CACnDC,QAASrB,EAAS,QAAU,QAC5BG,UAAWF,EAAQS,UACnBa,MAAO,gBACPlB,UAAW,OACXiB,QAAS,SACRX,GAA2BD,IAGzBf,IAAMwB,cAAcb,EAAWc,YAAS,CAC7CjB,UAAWqB,YAAKvB,EAAQwB,KAAMvB,GAC9BJ,IAAKA,GACJiB,GAAQf,GAAUL,IAAMwB,cAAc,MAAO,CAC9ChB,UAAWF,EAAQD,QAClBA,GAASL,IAAMwB,cAAc,MAAO,CACrChB,UAAWF,EAAQyB,SAClBb,EAAOH,GAAYX,GAAUJ,IAAMwB,cAAc,MAAO,CACzDhB,UAAWF,EAAQF,QAClBA,OA4DU4B,gBA5IK,CAElBF,KAAM,CACJH,QAAS,OACTM,WAAY,SACZC,QAAS,IAIX7B,OAAQ,CACN8B,KAAM,WACNC,YAAa,IAIfhC,OAAQ,CACN+B,KAAM,WACNE,UAAW,aACXC,WAAY,EACZF,aAAc,GAIhBL,QAAS,CACPI,KAAM,YAIRjB,MAAO,GAGPH,UAAW,IA6GqB,CAChCwB,KAAM,iBADOP,CAEZjC,I,qGC3IYyC,MAPI,EAAGC,WAAUC,WAAW,SACzC,MAAM,MAAEC,GAAUC,eACZ,MAAEC,GAAUC,cAElB,OAAOD,EAAME,KAAMC,GAASC,OAAOC,KAAKF,EAAKG,QAAQC,SAAST,IAAUF,EAAWC,G,kOCMtEW,MAXQC,IAAOC,IAAV,K,QCALC,0BAAc,I,4DCWzBC,EAAOzD,IAAMC,YAAW,SAAcC,EAAOC,GAC/C,IAAIG,EAAUJ,EAAMI,QAChBE,EAAYN,EAAMM,UAClBkD,EAAgBxD,EAAMyD,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CtC,EAAQC,YAAyBnB,EAAO,CAAC,UAAW,YAAa,WAErE,OAAOF,IAAMwB,cAAcoC,IAAOnC,YAAS,CACzCjB,UAAWqB,YAAKvB,EAAQwB,KAAMtB,GAC9BqD,UAAWF,EAAS,EAAI,EACxBxD,IAAKA,GACJiB,OAmBUY,cApCK,CAElBF,KAAM,CACJgC,SAAU,WAiCoB,CAChCvB,KAAM,WADOP,CAEZyB,G,sJClCY1D,MARIuD,YAAOS,IAAPT,CAAH,K,gKCSDU,MATKV,YAAO/B,KAAY0C,MAAM,CAC3CC,MAAO,SACPxD,UAAW,OAFO4C,CAAH,K,+OCWjB,MAAMa,EAAqBb,YAAOc,IAAPd,CAAH,KAsCTe,MA7BU,EAAGC,QAAOC,QAAOC,aAAYC,YAAYC,OAAMC,UAAUD,WAChF,MAAM,QAAEE,EAAF,MAAWjC,GAAUC,eACpB,CAAEiC,GAAYC,qBAAWC,MACzBC,GAAKC,cAKZ,OACE,kBAACd,EAAD,CAAoBzD,UAAU,MAAMG,mBAAiB,GACnD,kBAAC,IAAD,CACEe,MAAM,UACNsD,WAAYF,EAAE,iBACdG,YAAaH,EAAE,iBACf9D,MAAO8D,EAAE,qBACTI,SAAUJ,EAAE,+BACZK,KAAK,QACLC,UAbe,KACnBT,ECrBuB,EAACU,EAAK5C,EAAO4B,EAAOC,KAApB,CACzBlD,KAAM,KACNiE,MACA5C,QACA4B,QACAC,eDgBWgB,CAAYZ,EAASjC,EAAO4B,EAAOC,IAC5CC,OAaE,kBAAClD,EAAA,EAAD,CAAY2C,MAAM,SAASxC,QAAQ,SAChC4C,GAEH,kBAACmB,EAAA,EAAD,CAAY7D,MAAM,UAAUyD,KAAK,QAAQK,aAAYV,EAAE,iBAAkBW,QAAShB,GAChF,kBAACiB,EAAA,EAAD,iBEtBOC,MAhBQ,EAAGtB,QAAOD,QAAOE,iBACtC,MAAOsB,EAAUC,GAAeC,oBAAS,GAEnCC,EAAiB,IAAMF,GAAY,GACnCG,EAAcC,YAAc,CAAEC,YAFb,IAAML,GAAY,KAIzC,OACE,kBAACM,EAAA,EAAD,CAAuBC,OAAQR,EAAW,EAAI,GAC5C,kBAAC,EAAD,CAAkBnB,QAASsB,EAAgBxB,UAAWwB,EAAgBzB,WAAYA,EAAYF,MAAOA,EAAOC,MAAOA,IACnH,kBAACgC,EAAA,EAAD,eAAUC,QAAM,EAACC,OAAK,GAAKP,GACzB,kBAAC,EAAD,CAAaxE,QAAQ,SAAS4C,M,+GCZtC,MAAMoC,EAAiBpD,YAAOiD,IAAPjD,CAAH,IACMqD,IAAYC,QASvBC,MANM,EAAG1D,SAAS,GAAIR,WACnC,kBAAC+D,EAAD,CAAgBhG,UAAU,OACxB,kBAAC,EAAD,CAAagB,QAAQ,YAAYyB,EAAOR,GAAOmE,OAAO,CAACC,EAAKC,IAAUA,EAAQD,EAAK,K,sJCGxEE,MAZQ3D,YAAO4D,KAAWjD,MAAM,CAC7CkD,OAAQ,QACRzF,QAAS,WACTJ,KAAM,QAHegC,CAAH,K,kHCUpB,MAAM8D,GAA6B9D,IAAOC,IAAV,KA6CjB8D,OAxCO,EAAG9C,QAAOhC,OAAMY,SAAQR,QAAO2E,QAASC,MAC5D,MAAMC,EAAarE,EAAOR,IACnB8E,EAAaC,GAAkB5C,qBAAW6C,GAC3CC,EAAiBH,EAAYlD,GAWnC,OACE,4BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAYrD,MAAOqB,EAAMpB,qBAAsB,CAAE+C,MAAO,YACxD,kBAACkD,GAAD,KACE,kBAACS,EAAA,EAAD,CAAMnH,UAAU,MAAM+F,OAAK,GACxBqB,cAAIN,EAAY,CAAClD,EAAOiB,IACvB,kBAAC,EAAD,CAAgBA,IAAKA,EAAKjB,MAAOA,EAAOC,MAAOA,EAAOC,WAAYe,KAEpE,kBAAC,EAAD,CAAcpC,OAAQA,EAAQR,MAAOA,KAEvC,kBAAC,EAAD,CACEoF,WAAY,CACVC,SAAUzD,EAAQ,EAClB0D,QAAS,UAEXC,SA1BW,EAAGC,aACtBT,EAAeD,EAAYK,IAAI,CAACxD,EAAO8D,IAAOA,IAAM7D,EAAQ4D,EAAOnB,MAAQ1C,KA0BnE+D,UAAWf,YAAQC,EAxBFe,MACrBA,EAAM/C,IAAIgD,OAAS,GAAK,eAAeC,KAAKF,EAAM/C,QAGtD+C,EAAMG,kBACC,IAoBCzB,MAAOY,Q,8LCzCJc,OAPUpF,IAAOqF,GAAV,MCgBPC,OAXG,EAAG/F,QAAQ,GAAIF,QAAOkG,WAAWnE,UACjDoE,kBAAQjG,GACN,kBAAC,IAAD,MAEA,kBAAC,GAAD,KACGA,EAAMiF,IAAI,CAAC9E,EAAMuC,IAChB,kBAAC,GAAD,eAAeA,IAAKvC,EAAKT,KAAMgC,MAAOgB,EAAK5C,MAAOA,EAAO2E,QAASuB,GAAc7F,M,uCCqCzE+F,OArCQ,EAAGnE,UAASjC,QAAOqG,QAAQtE,WAChD,MAAOuE,EAAMC,GAAWlD,oBAAS,IAC1BhB,GAAKC,eACL,CAAEJ,GAAYC,qBAAWC,KAC1BoE,EAAa,IAAMD,GAASD,GAMlC,OACE,oCACE,kBAAC,EAAD,KACE,kBAACG,EAAA,EAAD,CAAQxH,MAAM,UAAUF,QAAQ,YAAY2H,YAAWJ,EAAO,0BAAuBK,EAAWC,gBAAc,OAAO5D,QAASwD,GAC3HnE,EAAE,oBAGP,kBAACwE,GAAA,EAAD,CAAOC,GAAG,qBAAqBC,kBAAgB,oBAAoBC,mBAAiB,0BAA0BV,KAAMA,EAAMtE,QAASwE,GACjI,kBAAC,KAAD,KACE,kBAAC5H,EAAA,EAAD,CAAYG,QAAQ,KAAK+H,GAAG,qBACzBzE,EAAE,mBAEL,kBAACzD,EAAA,EAAD,CAAYG,QAAQ,YAAY+H,GAAG,2BAChCzE,EAAE,4BAEL,kBAAC,KAAD,KACE,kBAACoE,EAAA,EAAD,CAAQzD,QAASwD,GAAanE,EAAE,kBAChC,kBAACoE,EAAA,EAAD,CAAQxH,MAAM,UAAUgI,WAAS,EAACjE,QAtBvB,KACnBd,EAASgF,aAASjF,EAASjC,IAC3BuG,GAAQ,GACRF,EAAMrG,KAoBKqC,EAAE,wBCKF8E,OAjCI,EAAGnH,QAAOqG,YAC3B,MAAM,QAAEpE,GAAYhC,eACd,MAAEC,EAAQ,IAAOC,eAChB,CAAE+B,GAAYC,qBAAWC,KAC1BgF,EAAeC,MAAMC,KAAK,CAAE1B,OAAQ1F,EAAM0F,QAAU,IAAM,IAC1D2B,EAAQlE,mBAAS+D,IAChB/E,GAAKC,cACNkF,EAAe,KACnB,MAAOC,EAAQC,GAAaH,EACxBE,EAAOrH,KAAMuB,GAAmC,kBAAlBgG,OAAOhG,MACvCO,ERvBmB,EAACU,EAAK5C,EAAOyH,KAAb,CACvB9I,KAAM,MACNiE,MACA5C,QACAyH,WQoBMG,CACE3F,EACAjC,EACAyH,EAAOtC,IAAKxD,GAAUgG,OAAOE,SAASlG,EAAO,OAGjD+F,EAAUN,KAGd,OACE,kBAAC,EAAkBU,SAAnB,CAA4BzD,MAAOkD,GACjC,kBAAC,GAAD,CAAWrH,MAAOA,EAAOF,MAAOA,EAAOkG,SAAUsB,IACjD,kBAAC,EAAD,KACE,kBAACf,EAAA,EAAD,CAAQsB,KAAK,OAAO9I,MAAM,UAAUF,QAAQ,YAAYiE,QAASwE,GAC9DnF,EAAE,gBAGP,kBAAC,GAAD,CAAUJ,QAASA,EAASjC,MAAOA,EAAOqG,MAAOA,M,kBCTxC2B,OAvBW,EAAGhI,QAAO8B,YAAYC,WAC9C,MAAO,CAAEG,GAAYC,qBAAWC,MAC1B,QAAEH,GAAYhC,eACboC,GAAKC,cAKZ,OACE,kBAAC,IAAD,CACEC,WAAYF,EAAE,iBACdG,YAAaH,EAAE,iBACf9D,MAAO8D,EAAE,oBACTI,SAAUJ,EAAE,+BACZpD,MAAM,UACNgJ,KAAG,EACHvF,KAAK,QACL3D,QAAQ,YACR4D,UAdiB,KACnBb,IACAI,EAASgG,aAAmBjG,EAASjC,Q,2SCFzC,MAAMmI,GAAiBxH,YAAO/B,KAAY0C,MAAM,CAC9CvC,QAAS,YADY4B,CAAH,MAUdU,GAAcV,YAAO/B,KAAY0C,MAAM,CAC3CvC,QAAS,YADS4B,CAAH,MAuCFyH,OA9BM,EAAGlI,QAAOF,QAAOqI,WAAWtG,WAC/C,MAAMuG,EAAcC,iBAAOrI,EAAO,EAAGM,aAAcA,EAAOR,GAAOmE,OAAO,CAACC,EAAKC,IAAUA,EAAQD,EAAK,IACrG,OACE,oCACE,kBAACc,EAAA,EAAD,CAAMnH,UAAU,OACbuK,EAAYnD,IAAK9E,GAChB,kBAACuD,EAAA,EAAD,CAAUhB,IAAG,UAAKvC,EAAKT,MAAV,OAAiBI,IAC5B,kBAACyB,EAAA,EAAD,CAAcvD,mBAAiB,GAC7B,kBAACsK,GAAA,EAAD,CAAMxJ,SAAO,EAACyJ,MAAM,SAASC,QAAQ,iBACnC,kBAAC9J,EAAA,EAAD,CAAYG,QAAQ,SAASsB,EAAKT,MAClC,kBAACuI,GAAD,KAAiB9H,EAAKG,OAAOR,GAAOmE,OAAO,CAACC,EAAKC,IAAUA,EAAQD,EAAK,KAE1E,kBAACoE,GAAA,EAAD,CAAMzK,UAAU,KAAKiB,SAAO,EAACyJ,MAAM,SAASC,QAAQ,YACjDvD,cAAI9E,EAAKG,OAAOR,GAAQ,CAAC2B,EAAOC,IAC/B,wBAAIgB,IAAKhB,GACP,kBAAC,GAAD,KAAcD,UAQ5B,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAmB3B,MAAOA,EAAO8B,UAAWuG,O,sCC7BrCM,OAjBE,EAAGC,OAAO,OACzB,MAAMC,EAAWC,eACX,KAAElJ,GAASgJ,EAGjB,OACE,kBAAC,KAAD,KACE,kBAAC9F,EAAA,EAAD,CAAY7D,MAAM,UAAU+D,QAAS4F,EAHxB,IAAMC,EAAS,SADf,IAAMA,EAAS,gBAK1B,kBAAC5F,EAAA,EAAD,oBAEF,kBAAC,KAAD,CAAU8F,GAAG,UAAUnJ,GACvB,kBAAC,KAAD,MACA,kBAAC,KAAD,Q,SCaSoJ,UArBD,KACZ,MAAM,MAAEhJ,GAAUC,cACZ2I,EAAOzI,eACNkC,GAAKC,cACNuG,EAAWC,cAEXG,EAAW,IAAMJ,EAAS,SAC1BK,EAAWN,GAAQA,EAAK5I,QAAUA,EACxC,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAYD,SAAU,kBAACoJ,EAAA,EAAD,CAAiBpB,KAAK,UAAUqB,QAAS/G,EAAE,yBAC9D6G,EAAW,kBAAC,GAAD,CAAQlJ,MAAOA,EAAOqG,MAAO4C,IAAe,kBAAC,GAAD,CAAc/I,MAAO0I,EAAOA,EAAK1I,MAAQ,GAAIF,MAAOA,EAAOqI,SAAUY,MAGjI,kBAACI,GAAA,EAAD","file":"static/js/r.a3cf77db.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classNameProp),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import { useParams } from 'react-router-dom'\nimport useGame from 'components/game/useGame'\n\nconst RoundGuard = ({ children, fallback = null }) => {\n  const { round } = useParams()\n  const { teams } = useGame()\n\n  return teams.some((team) => Object.keys(team.rounds).includes(round)) ? children : fallback\n}\n\nexport default RoundGuard\n","import styled from 'styled-components'\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.5rem 1rem;\n\n  > button {\n    flex: 1 1 100%;\n    margin: 0.25rem 0;\n  }\n`\n\nexport default ButtonsWrapper\n","import { createContext } from 'react'\n\nexport default createContext([])\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import styled from 'styled-components'\nimport MuiCardHeader from '@material-ui/core/CardHeader'\n\nconst CardHeader = styled(MuiCardHeader)`\n  padding: 0.5rem;\n\n  span {\n    font-size: 11px;\n  }\n`\n\nexport default CardHeader\n","import styled from 'styled-components'\nimport Typography from '@material-ui/core/Typography'\n\nconst StyledScore = styled(Typography).attrs({\n  align: 'center',\n  component: 'div',\n})`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nexport default StyledScore\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { noop } from 'lodash'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nimport ModalConfirm from 'common/modal/Confirm'\nimport GameStoreContext from 'components/game/context/Store'\nimport { removeScore } from '../actionCreators'\n\nconst StyledListItemText = styled(ListItemText)`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  gap: 5px;\n`\n\nconst RoundScoreRemove = ({ score, index, scoreIndex, onSuccess = noop, onClose = noop }) => {\n  const { gameKey, round } = useParams()\n  const [, dispatch] = useContext(GameStoreContext)\n  const [t] = useTranslation()\n  const handleRemove = () => {\n    dispatch(removeScore(gameKey, round, index, scoreIndex))\n    onSuccess()\n  }\n  return (\n    <StyledListItemText component=\"div\" disableTypography>\n      <ModalConfirm\n        color=\"primary\"\n        cancelText={t('button.cancel')}\n        confirmText={t('button.remove')}\n        title={t('title.removeScore')}\n        subtitle={t('messages.confirmRemoveScore')}\n        size=\"small\"\n        onConfirm={handleRemove}\n      />\n      <Typography align=\"center\" variant=\"body2\">\n        {score}\n      </Typography>\n      <IconButton color=\"primary\" size=\"small\" aria-label={t('button.cancel')} onClick={onClose}>\n        <Icon>check</Icon>\n      </IconButton>\n    </StyledListItemText>\n  )\n}\n\nexport default RoundScoreRemove\n","export const addScores = (key, round, scores) => ({\n  type: 'S++',\n  key,\n  round,\n  scores,\n})\n\nexport const removeScore = (key, round, index, scoreIndex) => ({\n  type: 'S-',\n  key,\n  round,\n  index,\n  scoreIndex,\n})\n","import React, { useState } from 'react'\nimport ListItem from '@material-ui/core/ListItem'\n\nimport SlideLongRippleSwitch from 'common/SlideLongRippleSwitch'\nimport StyledScore from 'common/StyledScore'\nimport useLongRipple from 'common/useLongRipple'\nimport RoundScoreRemove from './form/ScoreRemove'\n\nconst GameRoundScore = ({ index, score, scoreIndex }) => {\n  const [canClose, setCanClose] = useState(false)\n  const handleEditMode = () => setCanClose(true)\n  const handleViewMode = () => setCanClose(false)\n  const rippleProps = useLongRipple({ onLongPress: handleEditMode })\n\n  return (\n    <SlideLongRippleSwitch active={canClose ? 0 : 1}>\n      <RoundScoreRemove onClose={handleViewMode} onSuccess={handleViewMode} scoreIndex={scoreIndex} score={score} index={index} />\n      <ListItem button dense {...rippleProps}>\n        <StyledScore variant=\"body2\">{score}</StyledScore>\n      </ListItem>\n    </SlideLongRippleSwitch>\n  )\n}\n\nexport default GameRoundScore\n","import React from 'react'\nimport styled from 'styled-components'\nimport ListItem from '@material-ui/core/ListItem'\nimport StyledScore from 'common/StyledScore'\nimport { themeColors } from 'themes'\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 1px solid ${themeColors.border};\n`\n\nconst GameRoundSum = ({ rounds = [], round }) => (\n  <StyledListItem component=\"div\">\n    <StyledScore variant=\"overline\">{rounds[round].reduce((sum, value) => value + sum, 0)}</StyledScore>\n  </StyledListItem>\n)\n\nexport default GameRoundSum\n","import styled from 'styled-components'\nimport TextField from '@material-ui/core/TextField'\n\nconst RoundListField = styled(TextField).attrs({\n  margin: 'dense',\n  variant: 'outlined',\n  type: 'text',\n})`\n  width: 100px;\n\n  input {\n    text-align: center;\n  }\n`\n\nexport default RoundListField\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { map } from 'lodash'\nimport Card from '@material-ui/core/Card'\nimport List from '@material-ui/core/List'\n\nimport CardHeader from 'common/card/Header'\nimport GameScoresContext from 'components/game/context/Scores'\nimport GameRoundScore from 'components/game/round/Score'\nimport GameRoundSum from 'components/game/round/Sum'\nimport { onEnter } from 'utils/handlers'\nimport RoundListField from './Field'\n\nconst StyledRoundListItemContent = styled.div`\n  padding: 16px;\n  text-align: center;\n`\n\nconst RoundListItem = ({ index, name, rounds, round, onEnter: handleEnter }) => {\n  const teamScores = rounds[round]\n  const [roundScores, setRoundScores] = useContext(GameScoresContext)\n  const teamScoreValue = roundScores[index]\n  const handleChange = ({ target }) => {\n    setRoundScores(roundScores.map((score, i) => (i === index ? target.value : score)))\n  }\n  const handleOnlyNumbers = (event) => {\n    if (event.key.length > 1 || /[0-9]|-|\\.|,/.test(event.key)) {\n      return true\n    }\n    event.preventDefault()\n    return false\n  }\n  return (\n    <li>\n      <Card>\n        <CardHeader title={name} titleTypographyProps={{ align: 'center' }} />\n        <StyledRoundListItemContent>\n          <List component=\"div\" dense>\n            {map(teamScores, (score, key) => (\n              <GameRoundScore key={key} score={score} index={index} scoreIndex={key} />\n            ))}\n            <GameRoundSum rounds={rounds} round={round} />\n          </List>\n          <RoundListField\n            inputProps={{\n              tabIndex: index + 1,\n              pattern: '-?\\\\d*',\n            }}\n            onChange={handleChange}\n            onKeyDown={onEnter(handleEnter, handleOnlyNumbers)}\n            value={teamScoreValue}\n          />\n        </StyledRoundListItemContent>\n      </Card>\n    </li>\n  )\n}\n\nexport default RoundListItem\n","import styled from 'styled-components'\n\nconst RoundListWrapper = styled.ul`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n  padding: 1rem;\n`\n\nexport default RoundListWrapper\n","import React from 'react'\nimport { isEmpty, noop } from 'lodash'\nimport TeamListEmpty from 'components/game/team/list/Empty'\n\nimport RoundListItem from './Item'\nimport RoundListWrapper from './Wrapper'\n\nconst RoundList = ({ teams = [], round, onSubmit = noop }) =>\n  isEmpty(teams) ? (\n    <TeamListEmpty />\n  ) : (\n    <RoundListWrapper>\n      {teams.map((team, key) => (\n        <RoundListItem key={team.name} index={key} round={round} onEnter={onSubmit} {...team} />\n      ))}\n    </RoundListWrapper>\n  )\n\nexport default RoundList\n","import React, { useContext, useState } from 'react'\nimport { noop } from 'lodash'\nimport { useTranslation } from 'react-i18next'\nimport Button from '@material-ui/core/Button'\nimport Modal from '@material-ui/core/Modal'\nimport Typography from '@material-ui/core/Typography'\n\nimport ButtonsWrapper from 'common/ButtonsWrapper'\nimport ModalActions from 'common/modal/Actions'\nimport ModalContent from 'common/modal/Content'\nimport GameStoreContext from 'components/game/context/Store'\nimport { endRound } from 'components/game/actionCreators'\n\nconst RoundActionEnd = ({ gameKey, round, onEnd = noop }) => {\n  const [open, setOpen] = useState(false)\n  const [t] = useTranslation()\n  const [, dispatch] = useContext(GameStoreContext)\n  const toggleOpen = () => setOpen(!open)\n  const handleSubmit = () => {\n    dispatch(endRound(gameKey, round))\n    setOpen(false)\n    onEnd(round)\n  }\n  return (\n    <>\n      <ButtonsWrapper>\n        <Button color=\"primary\" variant=\"contained\" aria-owns={open ? 'confirm-end-dialog' : undefined} aria-haspopup=\"true\" onClick={toggleOpen}>\n          {t('button.endGame')}\n        </Button>\n      </ButtonsWrapper>\n      <Modal id=\"confirm-end-dialog\" aria-labelledby=\"confirm-end-title\" aria-describedby=\"confirm-end-description\" open={open} onClose={toggleOpen}>\n        <ModalContent>\n          <Typography variant=\"h6\" id=\"confirm-end-title\">\n            {t('button.endGame')}\n          </Typography>\n          <Typography variant=\"subtitle1\" id=\"confirm-end-description\">\n            {t('messages.confirmEndGame')}\n          </Typography>\n          <ModalActions>\n            <Button onClick={toggleOpen}>{t('button.cancel')}</Button>\n            <Button color=\"primary\" autoFocus onClick={handleSubmit}>\n              {t('button.endGame')}\n            </Button>\n          </ModalActions>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}\n\nexport default RoundActionEnd\n","import React, { useContext, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useParams } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport ButtonsWrapper from 'common/ButtonsWrapper'\n\nimport GameStoreContext from './context/Store'\nimport GameScoresContext from './context/Scores'\nimport RoundList from './round/list/List'\nimport RoundEnd from './round/action/End'\nimport { addScores } from './round/actionCreators'\nimport useGame from './useGame'\n\nconst GameScores = ({ round, onEnd }) => {\n  const { gameKey } = useParams()\n  const { teams = [] } = useGame()\n  const [, dispatch] = useContext(GameStoreContext)\n  const initialState = Array.from({ length: teams.length }, () => '')\n  const state = useState(initialState)\n  const [t] = useTranslation()\n  const handleSubmit = () => {\n    const [scores, setScores] = state\n    if (scores.some((score) => typeof Number(score) === 'number')) {\n      dispatch(\n        addScores(\n          gameKey,\n          round,\n          scores.map((score) => Number.parseInt(score, 10)),\n        ),\n      )\n      setScores(initialState)\n    }\n  }\n  return (\n    <GameScoresContext.Provider value={state}>\n      <RoundList teams={teams} round={round} onSubmit={handleSubmit} />\n      <ButtonsWrapper>\n        <Button icon=\"plus\" color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n          {t('button.sum')}\n        </Button>\n      </ButtonsWrapper>\n      <RoundEnd gameKey={gameKey} round={round} onEnd={onEnd} />\n    </GameScoresContext.Provider>\n  )\n}\n\nexport default GameScores\n","import { noop } from 'lodash'\nimport React, { useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nimport ModalConfirm from 'common/modal/Confirm'\nimport GameStoreContext from 'components/game/context/Store'\nimport { deleteChampionship } from 'components/game/team/actionCreators'\n\nconst RoundActionDelete = ({ round, onSuccess = noop }) => {\n  const [, dispatch] = useContext(GameStoreContext)\n  const { gameKey } = useParams()\n  const [t] = useTranslation()\n  const handleDelete = () => {\n    onSuccess()\n    dispatch(deleteChampionship(gameKey, round))\n  }\n  return (\n    <ModalConfirm\n      cancelText={t('button.cancel')}\n      confirmText={t('button.remove')}\n      title={t('title.removeTeam')}\n      subtitle={t('messages.confirmRemoveRound')}\n      color=\"primary\"\n      fab\n      size=\"small\"\n      variant=\"contained\"\n      onConfirm={handleDelete}\n    />\n  )\n}\n\nexport default RoundActionDelete\n","import React from 'react'\nimport styled from 'styled-components'\nimport { map, noop, sortBy } from 'lodash'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nimport ButtonsWrapper from 'common/ButtonsWrapper'\nimport Flex from 'common/Flex'\n\nimport RoundActionDelete from './action/Delete'\n\nconst StyledSumScore = styled(Typography).attrs({\n  variant: 'overline',\n})`\n  && {\n    font-size: 2rem;\n    text-align: right;\n    line-height: 1.2;\n  }\n`\n\nconst StyledScore = styled(Typography).attrs({\n  variant: 'overline',\n})`\n  && {\n    font-size: 0.875rem;\n    margin-left: 0.875rem;\n  }\n`\n\nconst Championship = ({ teams, round, onDelete = noop }) => {\n  const sortedTeams = sortBy(teams, ({ rounds }) => -rounds[round].reduce((sum, value) => value + sum, 0))\n  return (\n    <>\n      <List component=\"div\">\n        {sortedTeams.map((team) => (\n          <ListItem key={`${team.name}${round}`}>\n            <ListItemText disableTypography>\n              <Flex display items=\"center\" justify=\"space-between\">\n                <Typography variant=\"body1\">{team.name}</Typography>\n                <StyledSumScore>{team.rounds[round].reduce((sum, value) => value + sum, 0)}</StyledSumScore>\n              </Flex>\n              <Flex component=\"ul\" display items=\"center\" justify=\"flex-end\">\n                {map(team.rounds[round], (score, index) => (\n                  <li key={index}>\n                    <StyledScore>{score}</StyledScore>\n                  </li>\n                ))}\n              </Flex>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n      <ButtonsWrapper>\n        <RoundActionDelete round={round} onSuccess={onDelete} />\n      </ButtonsWrapper>\n    </>\n  )\n}\n\nexport default Championship\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\n\nimport BarToolbar from 'common/bar/Toolbar'\nimport BarTitle from 'common/bar/Title'\nimport LocaleMenu from 'components/locale/Menu'\nimport ThemeMenu from 'components/theme/Menu'\n\nconst RoundTop = ({ game = {} }) => {\n  const navigate = useNavigate()\n  const { name } = game\n  const goToHome = () => navigate('../../../..')\n  const goToGame = () => navigate('../..')\n  return (\n    <BarToolbar>\n      <IconButton color=\"inherit\" onClick={game ? goToGame : goToHome}>\n        <Icon>arrow_back</Icon>\n      </IconButton>\n      <BarTitle pl=\"0.5rem\">{name}</BarTitle>\n      <LocaleMenu />\n      <ThemeMenu />\n    </BarToolbar>\n  )\n}\n\nexport default RoundTop\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nimport WarnPlaceholder from 'common/WarnPlaceholder'\nimport GameGuard from './game/Guard'\nimport RoundGuard from './game/round/Guard'\n\nimport useGame from './game/useGame'\nimport Scores from './game/Scores'\nimport Championship from './game/round/Championship'\nimport RoundTop from './game/round/Top'\nimport PageViewTracker from './PageViewTracker'\n\nconst Round = () => {\n  const { round } = useParams()\n  const game = useGame()\n  const [t] = useTranslation()\n  const navigate = useNavigate()\n\n  const goToGame = () => navigate('../..')\n  const isActive = game && game.round === round\n  return (\n    <>\n      <RoundTop />\n      <GameGuard>\n        <RoundGuard fallback={<WarnPlaceholder icon=\"warning\" message={t('text.roundNotFound')} />}>\n          {isActive ? <Scores round={round} onEnd={goToGame} /> : <Championship teams={game ? game.teams : []} round={round} onDelete={goToGame} />}\n        </RoundGuard>\n      </GameGuard>\n      <PageViewTracker />\n    </>\n  )\n}\n\nexport default Round\n"],"sourceRoot":""}